{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "description": {
      "type": "string",
      "description": "A short description of the response. CommonMark syntax MAY be used for rich text representation. This field is required.",
      "markdownDescription": "A short description of the response. CommonMark syntax MAY be used for rich text representation.\nThis field is required.",
      "examples": [
        "A list of users",
        "User created successfully",
        "Bad request - validation failed"
      ]
    },
    "headers": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/Header"
          },
          {
            "$ref": "#/definitions/Reference"
          }
        ]
      },
      "description": "Maps a header name to its definition. RFC7230 states header names are case insensitive. If a response header is defined with the name \"Content-Type\", it SHALL be ignored.",
      "markdownDescription": "Maps a header name to its definition. RFC7230 states header names are case insensitive.\nIf a response header is defined with the name \"Content-Type\", it SHALL be ignored.",
      "examples": [
        {
          "X-RateLimit-Limit": {
            "description": "Rate limit per hour",
            "schema": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "content": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/MediaType"
      },
      "description": "A map containing descriptions of potential response payloads. The key is a media type or media type range and the value describes it. For responses that match multiple keys, only the most specific key is applicable. e.g. text/plain overrides text/*",
      "markdownDescription": "A map containing descriptions of potential response payloads. The key is a media type\nor media type range and the value describes it. For responses that match multiple keys,\nonly the most specific key is applicable. e.g. text/plain overrides text/*",
      "examples": [
        {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      ]
    },
    "links": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/Link"
          },
          {
            "$ref": "#/definitions/Reference"
          }
        ]
      },
      "description": "A map of operations links that can be followed from the response. The key of the map is a short name for the link, following the naming constraints of the names for Component Objects.",
      "markdownDescription": "A map of operations links that can be followed from the response. The key of the map\nis a short name for the link, following the naming constraints of the names for\nComponent Objects.",
      "examples": [
        {
          "GetUser": {
            "operationId": "getUserById",
            "parameters": {
              "userId": "$response.body#/id"
            }
          }
        }
      ]
    }
  },
  "required": ["description"],
  "additionalProperties": {
    "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
    "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
    "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
  },
  "description": "----- Response Object\n-----\n\nDescribes a single response from an API Operation, including design-time, static links to operations based on the response.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#response-object OpenAPI 3.1.1 Response Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#response-object OpenAPI 3.1.0 Response Object }  |\n\n----- Fields\n-----",
  "markdownDescription": "-----\nResponse Object\n-----\n\nDescribes a single response from an API Operation, including design-time, static links\nto operations based on the response.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#response-object OpenAPI 3.1.1 Response Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#response-object OpenAPI 3.1.0 Response Object }  |\n\n-----\nFields\n-----",
  "definitions": {
    "Specification": {
      "type": "object",
      "properties": {
        "openapi": {
          "type": "string",
          "description": "This string MUST be the version number of the OpenAPI Specification that the OpenAPI document uses. The `openapi` field SHOULD be used by tooling to interpret the OpenAPI document. This is not related to the API `info.version` string. This field is required.",
          "markdownDescription": "This string MUST be the version number of the OpenAPI Specification that the\nOpenAPI document uses. The `openapi` field SHOULD be used by tooling to interpret\nthe OpenAPI document. This is not related to the API `info.version` string.\nThis field is required.",
          "examples": ["3.1.0", "3.1.1"]
        },
        "info": {
          "$ref": "#/definitions/Info",
          "description": "Provides metadata about the API. The metadata MAY be used by tooling as required. This field is required.",
          "markdownDescription": "Provides metadata about the API. The metadata MAY be used by tooling as required.\nThis field is required.",
          "examples": [
            {
              "title": "Pet Store API",
              "version": "1.0.0"
            }
          ]
        },
        "jsonSchemaDialect": {
          "type": "string",
          "description": "The default value for the `$schema` keyword within Schema Objects contained within this OAS document. This MUST be in the form of a URI.",
          "markdownDescription": "The default value for the `$schema` keyword within Schema Objects contained\nwithin this OAS document. This MUST be in the form of a URI.",
          "examples": ["https://json-schema.org/draft/2020-12/schema"]
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          },
          "description": "An array of Server Objects, which provide connectivity information to a target server. If the `servers` property is not provided, or is an empty array, the default value would be a Server Object with a `url` value of `/`.",
          "markdownDescription": "An array of Server Objects, which provide connectivity information to a target\nserver. If the `servers` property is not provided, or is an empty array, the\ndefault value would be a Server Object with a `url` value of `/`.",
          "examples": [
            [
              {
                "url": "https://api.example.com/v1",
                "description": "The production API server"
              }
            ]
          ]
        },
        "paths": {
          "$ref": "#/definitions/Paths",
          "description": "The available paths and operations for the API.",
          "markdownDescription": "The available paths and operations for the API.",
          "examples": [
            {
              "/pets": {
                "get": {
                  "summary": "List all pets",
                  "responses": {
                    "200": {
                      "description": "A list of pets"
                    }
                  }
                }
              }
            }
          ]
        },
        "webhooks": {
          "$ref": "#/definitions/Webhooks",
          "description": "The incoming webhooks that MAY be received as part of this API and that the API consumer MAY choose to implement. Closely related to the `callbacks` feature, this section describes requests initiated other than by an API call, for example by an out of band registration.",
          "markdownDescription": "The incoming webhooks that MAY be received as part of this API and that the\nAPI consumer MAY choose to implement. Closely related to the `callbacks` feature,\nthis section describes requests initiated other than by an API call, for example\nby an out of band registration.",
          "examples": [
            {
              "newPet": {
                "post": {
                  "requestBody": {
                    "description": "Information about a new pet"
                  }
                }
              }
            }
          ]
        },
        "components": {
          "$ref": "#/definitions/Components",
          "description": "An element to hold various schemas for the document.",
          "markdownDescription": "An element to hold various schemas for the document.",
          "examples": [
            {
              "schemas": {
                "Pet": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          ]
        },
        "security": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRequirement"
          },
          "description": "A declaration of which security mechanisms can be used across the API. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a request. Individual operations can override this definition.",
          "markdownDescription": "A declaration of which security mechanisms can be used across the API. The list\nof values includes alternative security requirement objects that can be used.\nOnly one of the security requirement objects need to be satisfied to authorize\na request. Individual operations can override this definition.",
          "examples": [
            [
              {
                "api_key": []
              }
            ]
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "description": "A list of tags used by the document with additional metadata. The order of the tags can be used to reflect on their order by the parsing tools. Not all tags that are used by the Operation Object must be declared. The tags that are not declared MAY be organized randomly or based on the tools' logic. Each tag name in the list MUST be unique.",
          "markdownDescription": "A list of tags used by the document with additional metadata. The order of the\ntags can be used to reflect on their order by the parsing tools. Not all tags\nthat are used by the Operation Object must be declared. The tags that are not\ndeclared MAY be organized randomly or based on the tools' logic. Each tag name\nin the list MUST be unique.",
          "examples": [
            [
              {
                "name": "pets",
                "description": "Pet store operations"
              }
            ]
          ]
        },
        "externalDocs": {
          "$ref": "#/definitions/ExternalDocumentation",
          "description": "Additional external documentation.",
          "markdownDescription": "Additional external documentation.",
          "examples": [
            {
              "description": "Find out more about our API",
              "url": "https://example.com/docs"
            }
          ]
        }
      },
      "required": ["openapi", "info"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- OpenAPI Specification\n-----\n\nThis is the root object of the OpenAPI document. It contains all the information needed to describe an API, including metadata, servers, paths, components, and more.\n\nThe OpenAPI Specification (OAS) defines a standard, language-agnostic interface to RESTful APIs which allows both humans and computers to discover and understand the capabilities of the service without access to source code, documentation, or through network traffic inspection.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#openapi-object OpenAPI 3.1.1 OpenAPI Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#openapi-object OpenAPI 3.1.0 OpenAPI Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nOpenAPI Specification\n-----\n\nThis is the root object of the OpenAPI document. It contains all the information\nneeded to describe an API, including metadata, servers, paths, components, and more.\n\nThe OpenAPI Specification (OAS) defines a standard, language-agnostic interface\nto RESTful APIs which allows both humans and computers to discover and understand\nthe capabilities of the service without access to source code, documentation, or\nthrough network traffic inspection.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#openapi-object OpenAPI 3.1.1 OpenAPI Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#openapi-object OpenAPI 3.1.0 OpenAPI Object }  |\n\n-----\nFields\n-----"
    },
    "Info": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the API. This field is required.",
          "markdownDescription": "The title of the API. This field is required.",
          "examples": ["Pet Store API", "User Management API"]
        },
        "summary": {
          "type": "string",
          "description": "A short summary of the API.",
          "markdownDescription": "A short summary of the API.",
          "examples": [
            "A sample API that uses a petstore as an example",
            "API for managing users and their data"
          ]
        },
        "description": {
          "type": "string",
          "description": "A description of the API. CommonMark syntax MAY be used for rich text representation.",
          "markdownDescription": "A description of the API. CommonMark syntax MAY be used for rich text representation.",
          "examples": [
            "This is a sample server Petstore server.",
            "This API provides endpoints for user management, authentication, and data operations."
          ]
        },
        "termsOfService": {
          "type": "string",
          "description": "A URL to the Terms of Service for the API. MUST be in the format of a URL.",
          "markdownDescription": "A URL to the Terms of Service for the API. MUST be in the format of a URL.",
          "examples": ["http://example.com/terms/", "https://www.example.com/terms-of-service"]
        },
        "contact": {
          "$ref": "#/definitions/Contact",
          "description": "The contact information for the exposed API.",
          "markdownDescription": "The contact information for the exposed API.",
          "examples": [
            {
              "name": "API Support",
              "email": "support@example.com"
            }
          ]
        },
        "license": {
          "$ref": "#/definitions/License",
          "description": "The license information for the exposed API.",
          "markdownDescription": "The license information for the exposed API.",
          "examples": [
            {
              "name": "Apache 2.0",
              "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
            }
          ]
        },
        "version": {
          "type": "string",
          "description": "The version of the OpenAPI document. This field is required.",
          "markdownDescription": "The version of the OpenAPI document. This field is required.",
          "examples": ["1.0.0", "2.1.3"]
        }
      },
      "required": ["title", "version"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Info Object\n-----\n\nThe object provides metadata about the API. The metadata MAY be used by tooling as required. The object may be extended with Specification Extensions.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#info-object OpenAPI 3.1.1 Info Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#info-object OpenAPI 3.1.0 Info Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nInfo Object\n-----\n\nThe object provides metadata about the API. The metadata MAY be used by tooling\nas required. The object may be extended with Specification Extensions.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#info-object OpenAPI 3.1.1 Info Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#info-object OpenAPI 3.1.0 Info Object }  |\n\n-----\nFields\n-----"
    },
    "Contact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The identifying name of the contact person/organization.",
          "markdownDescription": "The identifying name of the contact person/organization.",
          "examples": ["API Support", "Development Team"]
        },
        "url": {
          "type": "string",
          "description": "The URL pointing to the contact information. MUST be in the format of a URL.",
          "markdownDescription": "The URL pointing to the contact information. MUST be in the format of a URL.",
          "examples": ["http://www.example.com/support", "https://example.com/contact"]
        },
        "email": {
          "type": "string",
          "description": "The email address of the contact person/organization. MUST be in the format of an email address.",
          "markdownDescription": "The email address of the contact person/organization. MUST be in the format of an email address.",
          "examples": ["support@example.com", "dev@example.com"]
        }
      },
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Contact Object\n-----\n\nContact information for the exposed API.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#contact-object OpenAPI 3.1.1 Contact Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#contact-object OpenAPI 3.1.0 Contact Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nContact Object\n-----\n\nContact information for the exposed API.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#contact-object OpenAPI 3.1.1 Contact Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#contact-object OpenAPI 3.1.0 Contact Object }  |\n\n-----\nFields\n-----"
    },
    "License": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The license name used for the API. This field is required.",
          "markdownDescription": "The license name used for the API. This field is required.",
          "examples": ["Apache 2.0", "MIT", "GPL-3.0"]
        },
        "identifier": {
          "type": "string",
          "description": "An SPDX license expression for the API. The `identifier` field is mutually exclusive of the `url` field.",
          "markdownDescription": "An SPDX license expression for the API. The `identifier` field is mutually\nexclusive of the `url` field.",
          "examples": ["Apache-2.0", "MIT", "GPL-3.0"]
        },
        "url": {
          "type": "string",
          "description": "A URL to the license used for the API. MUST be in the format of a URL. The `url` field is mutually exclusive of the `identifier` field.",
          "markdownDescription": "A URL to the license used for the API. MUST be in the format of a URL.\nThe `url` field is mutually exclusive of the `identifier` field.",
          "examples": [
            "https://www.apache.org/licenses/LICENSE-2.0.html",
            "https://opensource.org/licenses/MIT"
          ]
        }
      },
      "required": ["name"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- License Object\n-----\n\nLicense information for the exposed API.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#license-object OpenAPI 3.1.1 License Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#license-object OpenAPI 3.1.0 License Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nLicense Object\n-----\n\nLicense information for the exposed API.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#license-object OpenAPI 3.1.1 License Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#license-object OpenAPI 3.1.0 License Object }  |\n\n-----\nFields\n-----"
    },
    "Server": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "A URL to the target host. This URL supports Server Variables and MAY be relative, to indicate that the host location is relative to the location where the OpenAPI document is being served. Variable substitutions will be made when a variable is named in `{brackets}`.",
          "markdownDescription": "A URL to the target host. This URL supports Server Variables and MAY be relative,\nto indicate that the host location is relative to the location where the OpenAPI\ndocument is being served. Variable substitutions will be made when a variable\nis named in `{brackets}`.",
          "examples": [
            "https://api.example.com/v1",
            "https://{username}.gigantic-server.com:{port}/{basePath}",
            "/v1"
          ]
        },
        "description": {
          "type": "string",
          "description": "An optional string describing the host designated by the URL. CommonMark syntax MAY be used for rich text representation.",
          "markdownDescription": "An optional string describing the host designated by the URL. CommonMark syntax\nMAY be used for rich text representation.",
          "examples": ["The production API server", "The staging API server"]
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ServerVariable"
          },
          "description": "A map between a variable name and its value. The value is used for substitution in the server's URL template.",
          "markdownDescription": "A map between a variable name and its value. The value is used for substitution\nin the server's URL template.",
          "examples": [
            {
              "username": {
                "default": "demo"
              },
              "port": {
                "default": "8443"
              }
            }
          ]
        }
      },
      "required": ["url"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Server Object\n-----\n\nAn object representing a Server.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#server-object OpenAPI 3.1.1 Server Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#server-object OpenAPI 3.1.0 Server Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nServer Object\n-----\n\nAn object representing a Server.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#server-object OpenAPI 3.1.1 Server Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#server-object OpenAPI 3.1.0 Server Object }  |\n\n-----\nFields\n-----"
    },
    "ServerVariable": {
      "type": "object",
      "properties": {
        "enum": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An enumeration of string values to be used if the substitution options are from a limited set. The array SHOULD NOT be empty.",
          "markdownDescription": "An enumeration of string values to be used if the substitution options are\nfrom a limited set. The array SHOULD NOT be empty.",
          "examples": [
            ["8443", "443"],
            ["v1", "v2", "v3"]
          ]
        },
        "default": {
          "type": "string",
          "description": "The default value to use for substitution, which SHALL be sent if an alternate value is not supplied. Note this behavior is different than the Schema Object's treatment of default values, because in those cases parameter values are optional. If the enum is defined, the value SHOULD exist in the enum's values.",
          "markdownDescription": "The default value to use for substitution, which SHALL be sent if an alternate\nvalue is not supplied. Note this behavior is different than the Schema Object's\ntreatment of default values, because in those cases parameter values are optional.\nIf the enum is defined, the value SHOULD exist in the enum's values.",
          "examples": ["demo", "8443", "v1"]
        },
        "description": {
          "type": "string",
          "description": "An optional description for the server variable. CommonMark syntax MAY be used for rich text representation.",
          "markdownDescription": "An optional description for the server variable. CommonMark syntax MAY be used\nfor rich text representation.",
          "examples": ["this value is assigned by the service provider", "The port number"]
        }
      },
      "required": ["default"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Server Variable Object\n-----\n\nAn object representing a Server Variable for server URL template substitution.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#server-variable-object OpenAPI 3.1.1 Server Variable Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#server-variable-object OpenAPI 3.1.0 Server Variable Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nServer Variable Object\n-----\n\nAn object representing a Server Variable for server URL template substitution.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#server-variable-object OpenAPI 3.1.1 Server Variable Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#server-variable-object OpenAPI 3.1.0 Server Variable Object }  |\n\n-----\nFields\n-----"
    },
    "Paths": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/PathItem"
          },
          {
            "$ref": "#/definitions/Reference"
          }
        ]
      },
      "description": "----- Paths Object\n-----\n\nHolds the relative paths to the individual endpoints and their operations. The path is appended to the URL from the Server Object in order to construct the full URL. The Paths may be empty, due to ACL constraints.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#paths-object OpenAPI 3.1.1 Paths Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#paths-object OpenAPI 3.1.0 Paths Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nPaths Object\n-----\n\nHolds the relative paths to the individual endpoints and their operations.\nThe path is appended to the URL from the Server Object in order to construct\nthe full URL. The Paths may be empty, due to ACL constraints.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#paths-object OpenAPI 3.1.1 Paths Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#paths-object OpenAPI 3.1.0 Paths Object }  |\n\n-----\nFields\n-----"
    },
    "PathItem": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string",
          "description": "An optional, string summary, intended to apply to all operations in this path.",
          "markdownDescription": "An optional, string summary, intended to apply to all operations in this path.",
          "examples": ["Pet operations", "User management"]
        },
        "description": {
          "type": "string",
          "description": "An optional, string description, intended to apply to all operations in this path. CommonMark syntax MAY be used for rich text representation.",
          "markdownDescription": "An optional, string description, intended to apply to all operations in this path.\nCommonMark syntax MAY be used for rich text representation.",
          "examples": ["Operations related to pet management", "All user-related operations"]
        },
        "get": {
          "$ref": "#/definitions/Operation",
          "description": "A definition of a GET operation on this path.",
          "markdownDescription": "A definition of a GET operation on this path."
        },
        "put": {
          "$ref": "#/definitions/Operation",
          "description": "A definition of a PUT operation on this path.",
          "markdownDescription": "A definition of a PUT operation on this path."
        },
        "post": {
          "$ref": "#/definitions/Operation",
          "description": "A definition of a POST operation on this path.",
          "markdownDescription": "A definition of a POST operation on this path."
        },
        "delete": {
          "$ref": "#/definitions/Operation",
          "description": "A definition of a DELETE operation on this path.",
          "markdownDescription": "A definition of a DELETE operation on this path."
        },
        "options": {
          "$ref": "#/definitions/Operation",
          "description": "A definition of an OPTIONS operation on this path.",
          "markdownDescription": "A definition of an OPTIONS operation on this path."
        },
        "head": {
          "$ref": "#/definitions/Operation",
          "description": "A definition of a HEAD operation on this path.",
          "markdownDescription": "A definition of a HEAD operation on this path."
        },
        "patch": {
          "$ref": "#/definitions/Operation",
          "description": "A definition of a PATCH operation on this path.",
          "markdownDescription": "A definition of a PATCH operation on this path."
        },
        "trace": {
          "$ref": "#/definitions/Operation",
          "description": "A definition of a TRACE operation on this path.",
          "markdownDescription": "A definition of a TRACE operation on this path."
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          },
          "description": "An alternative server array to service all operations in this path.",
          "markdownDescription": "An alternative server array to service all operations in this path.",
          "examples": [
            [
              {
                "url": "https://api.example.com/v1"
              }
            ]
          ]
        },
        "parameters": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Parameter"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "A list of parameters that are applicable for all the operations described under this path. These parameters can be overridden at the operation level, but cannot be removed there. The list MUST NOT include duplicated parameters. A unique parameter is defined by a combination of a name and location.",
          "markdownDescription": "A list of parameters that are applicable for all the operations described under\nthis path. These parameters can be overridden at the operation level, but cannot\nbe removed there. The list MUST NOT include duplicated parameters. A unique\nparameter is defined by a combination of a name and location.",
          "examples": [
            [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ]
          ]
        }
      },
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Path Item Object\n-----\n\nDescribes the operations available on a single path. A Path Item MAY be empty, due to ACL constraints. The path itself is still exposed to the documentation viewer but they will not know which operations and parameters are available.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#path-item-object OpenAPI 3.1.1 Path Item Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#path-item-object OpenAPI 3.1.0 Path Item Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nPath Item Object\n-----\n\nDescribes the operations available on a single path. A Path Item MAY be empty,\ndue to ACL constraints. The path itself is still exposed to the documentation\nviewer but they will not know which operations and parameters are available.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#path-item-object OpenAPI 3.1.1 Path Item Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#path-item-object OpenAPI 3.1.0 Path Item Object }  |\n\n-----\nFields\n-----"
    },
    "Operation": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of tags for API documentation control. Tags can be used for logical grouping of operations by resources or any other qualifier.",
          "markdownDescription": "A list of tags for API documentation control. Tags can be used for logical\ngrouping of operations by resources or any other qualifier.",
          "examples": [
            ["pets", "list"],
            ["users", "authentication"]
          ]
        },
        "summary": {
          "type": "string",
          "description": "A short summary of what the operation does.",
          "markdownDescription": "A short summary of what the operation does.",
          "examples": ["List all pets", "Create a new user"]
        },
        "description": {
          "type": "string",
          "description": "A verbose explanation of the operation behavior. CommonMark syntax MAY be used for rich text representation.",
          "markdownDescription": "A verbose explanation of the operation behavior. CommonMark syntax MAY be used\nfor rich text representation.",
          "examples": [
            "Returns all pets from the system that the user has access to",
            "Creates a new user account with the provided information"
          ]
        },
        "externalDocs": {
          "$ref": "#/definitions/ExternalDocumentation",
          "description": "Additional external documentation for this operation.",
          "markdownDescription": "Additional external documentation for this operation.",
          "examples": [
            {
              "description": "Find out more about pet operations",
              "url": "https://example.com/docs/pets"
            }
          ]
        },
        "operationId": {
          "type": "string",
          "description": "Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is case-sensitive.",
          "markdownDescription": "Unique string used to identify the operation. The id MUST be unique among all\noperations described in the API. The operationId value is case-sensitive.",
          "examples": ["listPets", "createUser"]
        },
        "parameters": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Parameter"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "A list of parameters that are applicable for this operation. If a parameter is already defined at the Path Item, the new definition will override it but can never remove it. The list MUST NOT include duplicated parameters.",
          "markdownDescription": "A list of parameters that are applicable for this operation. If a parameter\nis already defined at the Path Item, the new definition will override it but\ncan never remove it. The list MUST NOT include duplicated parameters.",
          "examples": [
            [
              {
                "name": "limit",
                "in": "query",
                "schema": {
                  "type": "integer"
                }
              }
            ]
          ]
        },
        "requestBody": {
          "anyOf": [
            {
              "$ref": "#/definitions/RequestBody"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ],
          "description": "The request body applicable for this operation. The requestBody is only supported in HTTP methods where the HTTP 1.1 specification RFC7231 has explicitly defined semantics for request bodies.",
          "markdownDescription": "The request body applicable for this operation. The requestBody is only supported\nin HTTP methods where the HTTP 1.1 specification RFC7231 has explicitly defined\nsemantics for request bodies.",
          "examples": [
            {
              "description": "Pet to add to the store",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          ]
        },
        "responses": {
          "$ref": "#/definitions/ResponsesMap",
          "description": "The list of possible responses as they are returned from executing this operation. This field is required.",
          "markdownDescription": "The list of possible responses as they are returned from executing this operation.\nThis field is required.",
          "examples": [
            {
              "200": {
                "description": "A list of pets"
              },
              "default": {
                "description": "Unexpected error"
              }
            }
          ]
        },
        "callbacks": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/Callback"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "A map of possible out-of band callbacks related to the parent operation. The key is a unique identifier for the Callback Object. Each value in the map is a Callback Object that describes a request that may be initiated by the API provider and the expected responses.",
          "markdownDescription": "A map of possible out-of band callbacks related to the parent operation. The key\nis a unique identifier for the Callback Object. Each value in the map is a\nCallback Object that describes a request that may be initiated by the API\nprovider and the expected responses.",
          "examples": [
            {
              "myCallback": {
                "{$request.body#/callbackUrl}": {
                  "post": {
                    "requestBody": {
                      "description": "Callback payload"
                    }
                  }
                }
              }
            }
          ]
        },
        "deprecated": {
          "type": "boolean",
          "description": "Declares this operation to be deprecated. Consumers SHOULD refrain from using the declared operation. Default value is false.",
          "markdownDescription": "Declares this operation to be deprecated. Consumers SHOULD refrain from using\nthe declared operation. Default value is false.",
          "examples": [true, false],
          "default": false
        },
        "security": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRequirement"
          },
          "description": "A declaration of which security mechanisms can be used for this operation. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a request.",
          "markdownDescription": "A declaration of which security mechanisms can be used for this operation.\nThe list of values includes alternative security requirement objects that can\nbe used. Only one of the security requirement objects need to be satisfied\nto authorize a request.",
          "examples": [
            [
              {
                "petstore_auth": ["write:pets", "read:pets"]
              }
            ]
          ]
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          },
          "description": "An alternative server array to service this operation. If an alternative server object is specified at the Path Item Object level, it will be overridden by this value.",
          "markdownDescription": "An alternative server array to service this operation. If an alternative\nserver object is specified at the Path Item Object level, it will be\noverridden by this value.",
          "examples": [
            [
              {
                "url": "https://api.example.com/v1"
              }
            ]
          ]
        }
      },
      "required": ["responses"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Operation Object\n-----\n\nDescribes a single API operation on a path.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#operation-object OpenAPI 3.1.1 Operation Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#operation-object OpenAPI 3.1.0 Operation Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nOperation Object\n-----\n\nDescribes a single API operation on a path.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#operation-object OpenAPI 3.1.1 Operation Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#operation-object OpenAPI 3.1.0 Operation Object }  |\n\n-----\nFields\n-----"
    },
    "ExternalDocumentation": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A short description of the target documentation. CommonMark syntax MAY be used for rich text representation.",
          "markdownDescription": "A short description of the target documentation. CommonMark syntax MAY be used\nfor rich text representation.",
          "examples": ["Find out more about our API", "Additional documentation for this endpoint"]
        },
        "url": {
          "type": "string",
          "description": "The URL for the target documentation. This field is required and MUST be in the format of a URL.",
          "markdownDescription": "The URL for the target documentation. This field is required and MUST be in the\nformat of a URL.",
          "examples": ["https://example.com/docs", "https://docs.example.com/api"]
        }
      },
      "required": ["url"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- External Documentation Object\n-----\n\nAllows referencing an external resource for extended documentation.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#external-documentation-object OpenAPI 3.1.1 External Documentation Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#external-documentation-object OpenAPI 3.1.0 External Documentation Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nExternal Documentation Object\n-----\n\nAllows referencing an external resource for extended documentation.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#external-documentation-object OpenAPI 3.1.1 External Documentation Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#external-documentation-object OpenAPI 3.1.0 External Documentation Object }  |\n\n-----\nFields\n-----"
    },
    "Parameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the parameter. Parameter names are case sensitive.",
          "markdownDescription": "The name of the parameter. Parameter names are case sensitive.",
          "examples": ["userId", "limit", "X-API-Key"]
        },
        "in": {
          "type": "string",
          "enum": ["query", "header", "path", "cookie"],
          "description": "The location of the parameter. Possible values are \"query\", \"header\", \"path\" or \"cookie\".",
          "markdownDescription": "The location of the parameter. Possible values are \"query\", \"header\", \"path\" or \"cookie\".",
          "examples": ["query", "path", "header", "cookie"]
        },
        "description": {
          "type": "string",
          "description": "A brief description of the parameter. This could contain examples of use. CommonMark syntax MAY be used for rich text representation.",
          "markdownDescription": "A brief description of the parameter. This could contain examples of use.\nCommonMark syntax MAY be used for rich text representation.",
          "examples": ["The user ID to retrieve", "Maximum number of items to return"]
        },
        "required": {
          "type": "boolean",
          "description": "Determines whether this parameter is mandatory. If the parameter location is \"path\", this property is REQUIRED and its value MUST be true. Otherwise, the property MAY be included and its default value is false.",
          "markdownDescription": "Determines whether this parameter is mandatory. If the parameter location is \"path\",\nthis property is REQUIRED and its value MUST be true. Otherwise, the property MAY be\nincluded and its default value is false.",
          "examples": [true, false]
        },
        "deprecated": {
          "type": "boolean",
          "description": "Specifies that a parameter is deprecated and SHOULD be transitioned out of usage. Default value is false.",
          "markdownDescription": "Specifies that a parameter is deprecated and SHOULD be transitioned out of usage.\nDefault value is false.",
          "examples": [true, false]
        },
        "allowEmptyValue": {
          "type": "boolean",
          "description": "Sets the ability to pass empty-valued parameters. This is valid only for query parameters and allows sending a parameter with an empty value. Default value is false.",
          "markdownDescription": "Sets the ability to pass empty-valued parameters. This is valid only for query\nparameters and allows sending a parameter with an empty value. Default value is false.",
          "examples": [true, false]
        },
        "style": {
          "type": "string",
          "description": "Describes how the parameter value will be serialized depending on the type of the parameter value. Default values (based on value of in): for query - form; for path - simple; for header - simple; for cookie - form.",
          "markdownDescription": "Describes how the parameter value will be serialized depending on the type of the\nparameter value. Default values (based on value of in): for query - form; for path - simple;\nfor header - simple; for cookie - form.",
          "examples": [
            "simple",
            "form",
            "matrix",
            "label",
            "spaceDelimited",
            "pipeDelimited",
            "deepObject"
          ]
        },
        "explode": {
          "type": "boolean",
          "description": "When this is true, parameter values of type array or object generate separate parameters for each value of the array or key-value pair of the map. For other types of parameters this property has no effect. When style is form, the default value is true. For all other styles, the default value is false.",
          "markdownDescription": "When this is true, parameter values of type array or object generate separate parameters\nfor each value of the array or key-value pair of the map. For other types of parameters\nthis property has no effect. When style is form, the default value is true. For all other\nstyles, the default value is false.",
          "examples": [true, false]
        },
        "allowReserved": {
          "type": "boolean",
          "description": "Determines whether the parameter value SHOULD allow reserved characters, as defined by RFC3986 :/?#[]@!$&'()*+,;= to be included without percent-encoding. This property only applies to parameters with an in value of query. The default value is false.",
          "markdownDescription": "Determines whether the parameter value SHOULD allow reserved characters, as defined by\nRFC3986 :/?#[]@!$&'()*+,;= to be included without percent-encoding. This property only\napplies to parameters with an in value of query. The default value is false.",
          "examples": [true, false]
        },
        "schema": {
          "$ref": "#/definitions/Schema",
          "description": "The schema defining the type used for the parameter. This field is mutually exclusive with the content field.",
          "markdownDescription": "The schema defining the type used for the parameter. This field is mutually exclusive\nwith the content field.",
          "examples": [
            {
              "type": "string"
            },
            {
              "type": "integer",
              "minimum": 1
            }
          ]
        },
        "example": {
          "description": "Example of the parameter's potential value. The example SHOULD match the specified schema and encoding properties if present. The example field is mutually exclusive of the examples field. Furthermore, if referencing a schema that contains an example, the example value SHALL override the example provided by the schema.",
          "markdownDescription": "Example of the parameter's potential value. The example SHOULD match the specified\nschema and encoding properties if present. The example field is mutually exclusive\nof the examples field. Furthermore, if referencing a schema that contains an example,\nthe example value SHALL override the example provided by the schema.",
          "examples": [
            "example value",
            42,
            {
              "id": 1,
              "name": "John"
            }
          ]
        },
        "examples": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/Example"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "Examples of the parameter's potential value. Each example SHOULD contain a value in the correct format as specified in the parameter encoding. The examples field is mutually exclusive of the example field. Furthermore, if referencing a schema that contains an example, the examples value SHALL override the example provided by the schema.",
          "markdownDescription": "Examples of the parameter's potential value. Each example SHOULD contain a value in\nthe correct format as specified in the parameter encoding. The examples field is\nmutually exclusive of the example field. Furthermore, if referencing a schema that\ncontains an example, the examples value SHALL override the example provided by the schema.",
          "examples": [
            {
              "user1": {
                "summary": "A user example",
                "value": {
                  "id": 1,
                  "name": "John"
                }
              }
            }
          ]
        },
        "content": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MediaType"
          },
          "description": "A map containing the representations for the parameter. The key is the media type and the value describes it. The map MUST only contain one entry. This field is mutually exclusive with the schema field.",
          "markdownDescription": "A map containing the representations for the parameter. The key is the media type\nand the value describes it. The map MUST only contain one entry. This field is\nmutually exclusive with the schema field.",
          "examples": [
            {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          ]
        }
      },
      "required": ["name", "in"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Parameter Object\n-----\n\nDescribes a single operation parameter. A unique parameter is defined by a combination of a name and location. The parameter name is case sensitive.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#parameter-object OpenAPI 3.1.1 Parameter Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#parameter-object OpenAPI 3.1.0 Parameter Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nParameter Object\n-----\n\nDescribes a single operation parameter. A unique parameter is defined by a combination\nof a name and location. The parameter name is case sensitive.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#parameter-object OpenAPI 3.1.1 Parameter Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#parameter-object OpenAPI 3.1.0 Parameter Object }  |\n\n-----\nFields\n-----"
    },
    "Schema": {
      "anyOf": [
        {
          "$ref": "#/definitions/ReferenceSchema"
        },
        {
          "$ref": "#/definitions/StringSchema"
        },
        {
          "$ref": "#/definitions/NumberSchema"
        },
        {
          "$ref": "#/definitions/IntegerSchema"
        },
        {
          "$ref": "#/definitions/BooleanSchema"
        },
        {
          "$ref": "#/definitions/ArraySchema"
        },
        {
          "$ref": "#/definitions/ObjectSchema"
        },
        {
          "$ref": "#/definitions/NullSchema"
        },
        {
          "$ref": "#/definitions/CompositionSchema"
        }
      ],
      "description": "----- Schema Object\n-----\n\nThe Schema Object allows the definition of input and output data types. These types can be objects, but also primitives and arrays. This object is an extended subset of the JSON Schema Specification Draft 2020-12.\n\nThe Schema Object is a discriminated union that enforces mutual-exclusion and co-occurrence rules as specified in the OpenAPI 3.1.x specification.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#schema-object OpenAPI 3.1.1 Schema Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#schema-object OpenAPI 3.1.0 Schema Object }  |\n\n----- Schema Types\n-----\n\nThe Schema union includes the following types:\n\n**Reference Schema:**",
      "markdownDescription": "-----\nSchema Object\n-----\n\nThe Schema Object allows the definition of input and output data types. These types\ncan be objects, but also primitives and arrays. This object is an extended subset\nof the JSON Schema Specification Draft 2020-12.\n\nThe Schema Object is a discriminated union that enforces mutual-exclusion and\nco-occurrence rules as specified in the OpenAPI 3.1.x specification.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#schema-object OpenAPI 3.1.1 Schema Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#schema-object OpenAPI 3.1.0 Schema Object }  |\n\n-----\nSchema Types\n-----\n\nThe Schema union includes the following types:\n\n**Reference Schema:**"
    },
    "ReferenceSchema": {
      "type": "object",
      "properties": {
        "$ref": {
          "type": "string",
          "description": "A reference to a schema. This MUST be in the form of a URI. When present, no other properties except `description` and extensions are allowed.\n\nExample: `\"#/components/schemas/User\"`",
          "markdownDescription": "A reference to a schema. This MUST be in the form of a URI.\nWhen present, no other properties except `description` and extensions are allowed.\n\nExample: `\"#/components/schemas/User\"`"
        },
        "description": {
          "type": "string",
          "description": "A description of the referenced schema. CommonMark syntax MAY be used for rich text representation.\n\nExample: `\"Reference to a user schema\"`",
          "markdownDescription": "A description of the referenced schema.\nCommonMark syntax MAY be used for rich text representation.\n\nExample: `\"Reference to a user schema\"`"
        }
      },
      "required": ["$ref"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Reference Schema\n-----\n\nA schema that references another schema. When a schema contains `$ref`, no other sibling keys are allowed except `description` and extensions. This enforces the OpenAPI 3.1.x rule that `$ref` is exclusive with other properties.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#reference-object OpenAPI 3.1.1 Reference Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#reference-object OpenAPI 3.1.0 Reference Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nReference Schema\n-----\n\nA schema that references another schema. When a schema contains `$ref`,\nno other sibling keys are allowed except `description` and extensions.\nThis enforces the OpenAPI 3.1.x rule that `$ref` is exclusive with other properties.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#reference-object OpenAPI 3.1.1 Reference Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#reference-object OpenAPI 3.1.0 Reference Object }  |\n\n-----\nFields\n-----"
    },
    "StringSchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "string",
          "description": "The type identifier for string schemas. Must be \"string\".",
          "markdownDescription": "The type identifier for string schemas.\nMust be \"string\"."
        },
        "format": {
          "type": "string",
          "description": "The format of the string. See OpenAPI 3.1.x Data Type Formats for further details.\n\nExample: `\"email\"`, `\"date-time\"`, `\"uuid\"`",
          "markdownDescription": "The format of the string.\nSee OpenAPI 3.1.x Data Type Formats for further details.\n\nExample: `\"email\"`, `\"date-time\"`, `\"uuid\"`"
        },
        "maxLength": {
          "type": "number",
          "description": "The maximum length of the string. Must be a non-negative integer.\n\nExample: `255`",
          "markdownDescription": "The maximum length of the string.\nMust be a non-negative integer.\n\nExample: `255`"
        },
        "minLength": {
          "type": "number",
          "description": "The minimum length of the string. Must be a non-negative integer.\n\nExample: `1`",
          "markdownDescription": "The minimum length of the string.\nMust be a non-negative integer.\n\nExample: `1`"
        },
        "pattern": {
          "type": "string",
          "description": "A regular expression pattern that the string must match. Should be a valid ECMA 262 regular expression.\n\nExample: `\"^[A-Za-z0-9]+$\"`",
          "markdownDescription": "A regular expression pattern that the string must match.\nShould be a valid ECMA 262 regular expression.\n\nExample: `\"^[A-Za-z0-9]+$\"`"
        },
        "enum": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of allowed values for the string. The value must be one of the values in this array.\n\nExample: `[\"active\", \"inactive\", \"pending\"]`",
          "markdownDescription": "An array of allowed values for the string.\nThe value must be one of the values in this array.\n\nExample: `[\"active\", \"inactive\", \"pending\"]`"
        },
        "const": {
          "type": "string",
          "description": "A single allowed value for the string. The value must be exactly this value.\n\nExample: `\"active\"`",
          "markdownDescription": "A single allowed value for the string.\nThe value must be exactly this value.\n\nExample: `\"active\"`"
        },
        "example": {
          "type": "string",
          "description": "An example value for the string. This is for documentation purposes only.\n\nExample: `\"example@email.com\"`",
          "markdownDescription": "An example value for the string.\nThis is for documentation purposes only.\n\nExample: `\"example@email.com\"`"
        },
        "examples": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of example values for the string. These are for documentation purposes only.\n\nExample: `[\"example@email.com\", \"test@domain.com\"]`",
          "markdownDescription": "An array of example values for the string.\nThese are for documentation purposes only.\n\nExample: `[\"example@email.com\", \"test@domain.com\"]`"
        },
        "default": {
          "type": "string",
          "description": "The default value for the string. This value will be used if no value is provided.\n\nExample: `\"default\"`",
          "markdownDescription": "The default value for the string.\nThis value will be used if no value is provided.\n\nExample: `\"default\"`"
        },
        "title": {
          "type": "string",
          "description": "A short title for the schema. This is for documentation purposes only.\n\nExample: `\"User Email\"`",
          "markdownDescription": "A short title for the schema.\nThis is for documentation purposes only.\n\nExample: `\"User Email\"`"
        },
        "description": {
          "type": "string",
          "description": "A description of the schema. CommonMark syntax MAY be used for rich text representation.\n\nExample: `\"The email address of the user\"`",
          "markdownDescription": "A description of the schema.\nCommonMark syntax MAY be used for rich text representation.\n\nExample: `\"The email address of the user\"`"
        },
        "contentMediaType": {
          "type": "string",
          "description": "The media type of the content. This is used to specify the media type of the content when the string represents encoded content.\n\nExample: `\"image/png\"`, `\"application/json\"`",
          "markdownDescription": "The media type of the content. This is used to specify the media type\nof the content when the string represents encoded content.\n\nExample: `\"image/png\"`, `\"application/json\"`"
        },
        "contentEncoding": {
          "type": "string",
          "description": "The encoding of the content. This is used to specify how the content is encoded when the string represents encoded content.\n\nExample: `\"base64\"`, `\"base64url\"`, `\"quoted-printable\"`",
          "markdownDescription": "The encoding of the content. This is used to specify how the content\nis encoded when the string represents encoded content.\n\nExample: `\"base64\"`, `\"base64url\"`, `\"quoted-printable\"`"
        },
        "xml": {
          "$ref": "#/definitions/XML",
          "description": "XML representation metadata for the schema. Allows for fine-tuned XML model definitions.\n\nExample: `{ name: \"userName\", attribute: false }`",
          "markdownDescription": "XML representation metadata for the schema.\nAllows for fine-tuned XML model definitions.\n\nExample: `{ name: \"userName\", attribute: false }`"
        }
      },
      "required": ["type"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- String Schema\n-----\n\nA schema for string values. Includes string-specific validation properties that are only valid when `type: \"string\"` is specified.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#data-types OpenAPI 3.1.1 Data Types }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#data-types OpenAPI 3.1.0 Data Types }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nString Schema\n-----\n\nA schema for string values. Includes string-specific validation properties\nthat are only valid when `type: \"string\"` is specified.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#data-types OpenAPI 3.1.1 Data Types }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#data-types OpenAPI 3.1.0 Data Types }  |\n\n-----\nFields\n-----"
    },
    "XML": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Replaces the name of the element/attribute used for the described schema property. When defined within the Items Object (items), it will affect the name of the individual XML elements within the list. When defined alongside type being array (outside the items), it will affect the wrapping element and only if wrapped is true. If wrapped is false, it will be ignored.",
          "markdownDescription": "Replaces the name of the element/attribute used for the described schema property.\nWhen defined within the Items Object (items), it will affect the name of the individual\nXML elements within the list. When defined alongside type being array (outside the items),\nit will affect the wrapping element and only if wrapped is true. If wrapped is false,\nit will be ignored.",
          "examples": ["user", "id", "users"]
        },
        "namespace": {
          "type": "string",
          "description": "The URI of the namespace definition. This MUST be in the form of an absolute URI.",
          "markdownDescription": "The URI of the namespace definition. This MUST be in the form of an absolute URI.",
          "examples": ["http://example.com/schema/user", "http://www.w3.org/XML/1998/namespace"]
        },
        "prefix": {
          "type": "string",
          "description": "The prefix to be used for the name.",
          "markdownDescription": "The prefix to be used for the name.",
          "examples": ["user", "xml"]
        },
        "attribute": {
          "type": "boolean",
          "description": "Declares whether the property definition translates to an attribute instead of an element. Default value is false.",
          "markdownDescription": "Declares whether the property definition translates to an attribute instead of an element.\nDefault value is false.",
          "examples": [true, false]
        },
        "wrapped": {
          "type": "boolean",
          "description": "MAY be used only for an array definition. Signifies whether the array is wrapped (for example, `<books><book/><book/></books>`) or unwrapped (for example, `<book/><book/>`). Default value is false. The definition takes effect only when defined alongside type being array (outside the items).",
          "markdownDescription": "MAY be used only for an array definition. Signifies whether the array is wrapped\n(for example, `<books><book/><book/></books>`) or unwrapped\n(for example, `<book/><book/>`). Default value is false. The definition takes effect\nonly when defined alongside type being array (outside the items).",
          "examples": [true, false]
        }
      },
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- XML Object\n-----\n\nA metadata object that allows for more fine-tuned XML model definitions.\n\nWhen using arrays, XML element names are not inferred (for singular/plural forms) and the `name` property SHOULD be used to add that information.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#xml-object OpenAPI 3.1.1 XML Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#xml-object OpenAPI 3.1.0 XML Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nXML Object\n-----\n\nA metadata object that allows for more fine-tuned XML model definitions.\n\nWhen using arrays, XML element names are not inferred (for singular/plural forms)\nand the `name` property SHOULD be used to add that information.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#xml-object OpenAPI 3.1.1 XML Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#xml-object OpenAPI 3.1.0 XML Object }  |\n\n-----\nFields\n-----"
    },
    "NumberSchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "number",
          "description": "The type identifier for number schemas. Must be \"number\".",
          "markdownDescription": "The type identifier for number schemas.\nMust be \"number\"."
        },
        "format": {
          "type": "string",
          "description": "The format of the number. See OpenAPI 3.1.x Data Type Formats for further details.\n\nExample: `\"float\"`, `\"double\"`",
          "markdownDescription": "The format of the number.\nSee OpenAPI 3.1.x Data Type Formats for further details.\n\nExample: `\"float\"`, `\"double\"`"
        },
        "multipleOf": {
          "type": "number",
          "description": "The number must be a multiple of this value. Must be a positive number.\n\nExample: `0.5`",
          "markdownDescription": "The number must be a multiple of this value.\nMust be a positive number.\n\nExample: `0.5`"
        },
        "maximum": {
          "type": "number",
          "description": "The maximum value of the number (inclusive). The number must be less than or equal to this value.\n\nExample: `100`",
          "markdownDescription": "The maximum value of the number (inclusive).\nThe number must be less than or equal to this value.\n\nExample: `100`"
        },
        "minimum": {
          "type": "number",
          "description": "The minimum value of the number (inclusive). The number must be greater than or equal to this value.\n\nExample: `0`",
          "markdownDescription": "The minimum value of the number (inclusive).\nThe number must be greater than or equal to this value.\n\nExample: `0`"
        },
        "exclusiveMaximum": {
          "type": "number",
          "description": "The maximum value of the number (exclusive). The number must be less than this value.\n\nExample: `100`",
          "markdownDescription": "The maximum value of the number (exclusive).\nThe number must be less than this value.\n\nExample: `100`"
        },
        "exclusiveMinimum": {
          "type": "number",
          "description": "The minimum value of the number (exclusive). The number must be greater than this value.\n\nExample: `0`",
          "markdownDescription": "The minimum value of the number (exclusive).\nThe number must be greater than this value.\n\nExample: `0`"
        },
        "enum": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "An array of allowed values for the number. The value must be one of the values in this array.\n\nExample: `[1, 2, 3, 4, 5]`",
          "markdownDescription": "An array of allowed values for the number.\nThe value must be one of the values in this array.\n\nExample: `[1, 2, 3, 4, 5]`"
        },
        "const": {
          "type": "number",
          "description": "A single allowed value for the number. The value must be exactly this value.\n\nExample: `42`",
          "markdownDescription": "A single allowed value for the number.\nThe value must be exactly this value.\n\nExample: `42`"
        },
        "example": {
          "type": "number",
          "description": "An example value for the number. This is for documentation purposes only.\n\nExample: `42`",
          "markdownDescription": "An example value for the number.\nThis is for documentation purposes only.\n\nExample: `42`"
        },
        "examples": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "An array of example values for the number. These are for documentation purposes only.\n\nExample: `[1.5, 2.7, 3.14]`",
          "markdownDescription": "An array of example values for the number.\nThese are for documentation purposes only.\n\nExample: `[1.5, 2.7, 3.14]`"
        },
        "default": {
          "type": "number",
          "description": "The default value for the number. This value will be used if no value is provided.\n\nExample: `0`",
          "markdownDescription": "The default value for the number.\nThis value will be used if no value is provided.\n\nExample: `0`"
        },
        "title": {
          "type": "string",
          "description": "A short title for the schema. This is for documentation purposes only.\n\nExample: `\"Price\"`",
          "markdownDescription": "A short title for the schema.\nThis is for documentation purposes only.\n\nExample: `\"Price\"`"
        },
        "description": {
          "type": "string",
          "description": "A description of the schema. CommonMark syntax MAY be used for rich text representation.\n\nExample: `\"The price of the item\"`",
          "markdownDescription": "A description of the schema.\nCommonMark syntax MAY be used for rich text representation.\n\nExample: `\"The price of the item\"`"
        },
        "xml": {
          "$ref": "#/definitions/XML",
          "description": "XML representation metadata for the schema. Allows for fine-tuned XML model definitions.\n\nExample: `{ name: \"price\", attribute: false }`",
          "markdownDescription": "XML representation metadata for the schema.\nAllows for fine-tuned XML model definitions.\n\nExample: `{ name: \"price\", attribute: false }`"
        }
      },
      "required": ["type"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Number Schema\n-----\n\nA schema for number values. Includes number-specific validation properties that are only valid when `type: \"number\"` is specified.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#data-types OpenAPI 3.1.1 Data Types }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#data-types OpenAPI 3.1.0 Data Types }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nNumber Schema\n-----\n\nA schema for number values. Includes number-specific validation properties\nthat are only valid when `type: \"number\"` is specified.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#data-types OpenAPI 3.1.1 Data Types }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#data-types OpenAPI 3.1.0 Data Types }  |\n\n-----\nFields\n-----"
    },
    "IntegerSchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "integer",
          "description": "The type identifier for integer schemas. Must be \"integer\".",
          "markdownDescription": "The type identifier for integer schemas.\nMust be \"integer\"."
        },
        "format": {
          "type": "string",
          "description": "The format of the integer. See OpenAPI 3.1.x Data Type Formats for further details.\n\nExample: `\"int32\"`, `\"int64\"`",
          "markdownDescription": "The format of the integer.\nSee OpenAPI 3.1.x Data Type Formats for further details.\n\nExample: `\"int32\"`, `\"int64\"`"
        },
        "multipleOf": {
          "type": "number",
          "description": "The integer must be a multiple of this value. Must be a positive integer.\n\nExample: `5`",
          "markdownDescription": "The integer must be a multiple of this value.\nMust be a positive integer.\n\nExample: `5`"
        },
        "maximum": {
          "type": "number",
          "description": "The maximum value of the integer (inclusive). The integer must be less than or equal to this value.\n\nExample: `100`",
          "markdownDescription": "The maximum value of the integer (inclusive).\nThe integer must be less than or equal to this value.\n\nExample: `100`"
        },
        "minimum": {
          "type": "number",
          "description": "The minimum value of the integer (inclusive). The integer must be greater than or equal to this value.\n\nExample: `0`",
          "markdownDescription": "The minimum value of the integer (inclusive).\nThe integer must be greater than or equal to this value.\n\nExample: `0`"
        },
        "exclusiveMaximum": {
          "type": "number",
          "description": "The maximum value of the integer (exclusive). The integer must be less than this value.\n\nExample: `100`",
          "markdownDescription": "The maximum value of the integer (exclusive).\nThe integer must be less than this value.\n\nExample: `100`"
        },
        "exclusiveMinimum": {
          "type": "number",
          "description": "The minimum value of the integer (exclusive). The integer must be greater than this value.\n\nExample: `0`",
          "markdownDescription": "The minimum value of the integer (exclusive).\nThe integer must be greater than this value.\n\nExample: `0`"
        },
        "enum": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "An array of allowed values for the integer. The value must be one of the values in this array.\n\nExample: `[1, 2, 3, 4, 5]`",
          "markdownDescription": "An array of allowed values for the integer.\nThe value must be one of the values in this array.\n\nExample: `[1, 2, 3, 4, 5]`"
        },
        "const": {
          "type": "number",
          "description": "A single allowed value for the integer. The value must be exactly this value.\n\nExample: `42`",
          "markdownDescription": "A single allowed value for the integer.\nThe value must be exactly this value.\n\nExample: `42`"
        },
        "example": {
          "type": "number",
          "description": "An example value for the integer. This is for documentation purposes only.\n\nExample: `42`",
          "markdownDescription": "An example value for the integer.\nThis is for documentation purposes only.\n\nExample: `42`"
        },
        "examples": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "An array of example values for the integer. These are for documentation purposes only.\n\nExample: `[1, 2, 3]`",
          "markdownDescription": "An array of example values for the integer.\nThese are for documentation purposes only.\n\nExample: `[1, 2, 3]`"
        },
        "default": {
          "type": "number",
          "description": "The default value for the integer. This value will be used if no value is provided.\n\nExample: `0`",
          "markdownDescription": "The default value for the integer.\nThis value will be used if no value is provided.\n\nExample: `0`"
        },
        "title": {
          "type": "string",
          "description": "A short title for the schema. This is for documentation purposes only.\n\nExample: `\"User ID\"`",
          "markdownDescription": "A short title for the schema.\nThis is for documentation purposes only.\n\nExample: `\"User ID\"`"
        },
        "description": {
          "type": "string",
          "description": "A description of the schema. CommonMark syntax MAY be used for rich text representation.\n\nExample: `\"The unique identifier of the user\"`",
          "markdownDescription": "A description of the schema.\nCommonMark syntax MAY be used for rich text representation.\n\nExample: `\"The unique identifier of the user\"`"
        },
        "xml": {
          "$ref": "#/definitions/XML",
          "description": "XML representation metadata for the schema. Allows for fine-tuned XML model definitions.\n\nExample: `{ name: \"userId\", attribute: false }`",
          "markdownDescription": "XML representation metadata for the schema.\nAllows for fine-tuned XML model definitions.\n\nExample: `{ name: \"userId\", attribute: false }`"
        }
      },
      "required": ["type"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Integer Schema\n-----\n\nA schema for integer values. Includes integer-specific validation properties that are only valid when `type: \"integer\"` is specified.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#data-types OpenAPI 3.1.1 Data Types }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#data-types OpenAPI 3.1.0 Data Types }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nInteger Schema\n-----\n\nA schema for integer values. Includes integer-specific validation properties\nthat are only valid when `type: \"integer\"` is specified.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#data-types OpenAPI 3.1.1 Data Types }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#data-types OpenAPI 3.1.0 Data Types }  |\n\n-----\nFields\n-----"
    },
    "BooleanSchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "boolean",
          "description": "The type identifier for boolean schemas. Must be \"boolean\".",
          "markdownDescription": "The type identifier for boolean schemas.\nMust be \"boolean\"."
        },
        "enum": {
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "description": "An array of allowed values for the boolean. The value must be one of the values in this array.\n\nExample: `[true, false]`",
          "markdownDescription": "An array of allowed values for the boolean.\nThe value must be one of the values in this array.\n\nExample: `[true, false]`"
        },
        "const": {
          "type": "boolean",
          "description": "A single allowed value for the boolean. The value must be exactly this value.\n\nExample: `true`",
          "markdownDescription": "A single allowed value for the boolean.\nThe value must be exactly this value.\n\nExample: `true`"
        },
        "example": {
          "type": "boolean",
          "description": "An example value for the boolean. This is for documentation purposes only.\n\nExample: `true`",
          "markdownDescription": "An example value for the boolean.\nThis is for documentation purposes only.\n\nExample: `true`"
        },
        "examples": {
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "description": "An array of example values for the boolean. These are for documentation purposes only.\n\nExample: `[true, false]`",
          "markdownDescription": "An array of example values for the boolean.\nThese are for documentation purposes only.\n\nExample: `[true, false]`"
        },
        "default": {
          "type": "boolean",
          "description": "The default value for the boolean. This value will be used if no value is provided.\n\nExample: `false`",
          "markdownDescription": "The default value for the boolean.\nThis value will be used if no value is provided.\n\nExample: `false`"
        },
        "title": {
          "type": "string",
          "description": "A short title for the schema. This is for documentation purposes only.\n\nExample: `\"Is Active\"`",
          "markdownDescription": "A short title for the schema.\nThis is for documentation purposes only.\n\nExample: `\"Is Active\"`"
        },
        "description": {
          "type": "string",
          "description": "A description of the schema. CommonMark syntax MAY be used for rich text representation.\n\nExample: `\"Whether the user is active\"`",
          "markdownDescription": "A description of the schema.\nCommonMark syntax MAY be used for rich text representation.\n\nExample: `\"Whether the user is active\"`"
        },
        "xml": {
          "$ref": "#/definitions/XML",
          "description": "XML representation metadata for the schema. Allows for fine-tuned XML model definitions.\n\nExample: `{ name: \"isActive\", attribute: false }`",
          "markdownDescription": "XML representation metadata for the schema.\nAllows for fine-tuned XML model definitions.\n\nExample: `{ name: \"isActive\", attribute: false }`"
        }
      },
      "required": ["type"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Boolean Schema\n-----\n\nA schema for boolean values. Includes common validation properties that are only valid when `type: \"boolean\"` is specified.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#data-types OpenAPI 3.1.1 Data Types }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#data-types OpenAPI 3.1.0 Data Types }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nBoolean Schema\n-----\n\nA schema for boolean values. Includes common validation properties\nthat are only valid when `type: \"boolean\"` is specified.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#data-types OpenAPI 3.1.1 Data Types }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#data-types OpenAPI 3.1.0 Data Types }  |\n\n-----\nFields\n-----"
    },
    "ArraySchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "array",
          "description": "The type identifier for array schemas. Must be \"array\".",
          "markdownDescription": "The type identifier for array schemas.\nMust be \"array\"."
        },
        "items": {
          "description": "The schema for array items. All items in the array must conform to this schema.\n\nExample: `{ type: \"string\" }`",
          "markdownDescription": "The schema for array items.\nAll items in the array must conform to this schema.\n\nExample: `{ type: \"string\" }`"
        },
        "prefixItems": {
          "type": "array",
          "items": {},
          "description": "The schema for array items at specific positions. Items at position i must conform to the schema at index i.\n\nExample: `[{ type: \"string\" }, { type: \"number\" }]`",
          "markdownDescription": "The schema for array items at specific positions.\nItems at position i must conform to the schema at index i.\n\nExample: `[{ type: \"string\" }, { type: \"number\" }]`"
        },
        "contains": {
          "description": "The schema that the array must contain at least one item matching. At least one item in the array must conform to this schema.\n\nExample: `{ type: \"string\", enum: [\"admin\"] }`",
          "markdownDescription": "The schema that the array must contain at least one item matching.\nAt least one item in the array must conform to this schema.\n\nExample: `{ type: \"string\", enum: [\"admin\"] }`"
        },
        "minContains": {
          "type": "number",
          "description": "The minimum number of items that must match the contains schema. Must be a non-negative integer.\n\nExample: `1`",
          "markdownDescription": "The minimum number of items that must match the contains schema.\nMust be a non-negative integer.\n\nExample: `1`"
        },
        "maxContains": {
          "type": "number",
          "description": "The maximum number of items that must match the contains schema. Must be a non-negative integer.\n\nExample: `5`",
          "markdownDescription": "The maximum number of items that must match the contains schema.\nMust be a non-negative integer.\n\nExample: `5`"
        },
        "minItems": {
          "type": "number",
          "description": "The minimum number of items in the array. Must be a non-negative integer.\n\nExample: `1`",
          "markdownDescription": "The minimum number of items in the array.\nMust be a non-negative integer.\n\nExample: `1`"
        },
        "maxItems": {
          "type": "number",
          "description": "The maximum number of items in the array. Must be a non-negative integer.\n\nExample: `10`",
          "markdownDescription": "The maximum number of items in the array.\nMust be a non-negative integer.\n\nExample: `10`"
        },
        "uniqueItems": {
          "type": "boolean",
          "description": "Whether array items must be unique. If true, all items in the array must be unique.\n\nExample: `true`",
          "markdownDescription": "Whether array items must be unique.\nIf true, all items in the array must be unique.\n\nExample: `true`"
        },
        "enum": {
          "type": "array",
          "items": {},
          "description": "An array of allowed values for the array. The value must be one of the values in this array.\n\nExample: `[[\"a\", \"b\"], [\"c\", \"d\"]]`",
          "markdownDescription": "An array of allowed values for the array.\nThe value must be one of the values in this array.\n\nExample: `[[\"a\", \"b\"], [\"c\", \"d\"]]`"
        },
        "const": {
          "description": "A single allowed value for the array. The value must be exactly this value.\n\nExample: `[\"a\", \"b\"]`",
          "markdownDescription": "A single allowed value for the array.\nThe value must be exactly this value.\n\nExample: `[\"a\", \"b\"]`"
        },
        "example": {
          "type": "array",
          "items": {},
          "description": "An example value for the array. This is for documentation purposes only.\n\nExample: `[\"a\", \"b\"]`",
          "markdownDescription": "An example value for the array.\nThis is for documentation purposes only.\n\nExample: `[\"a\", \"b\"]`"
        },
        "examples": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {}
          },
          "description": "An array of example values for the array. These are for documentation purposes only.\n\nExample: `[[\"a\", \"b\"], [\"c\", \"d\"]]`",
          "markdownDescription": "An array of example values for the array.\nThese are for documentation purposes only.\n\nExample: `[[\"a\", \"b\"], [\"c\", \"d\"]]`"
        },
        "default": {
          "type": "array",
          "items": {},
          "description": "The default value for the array. This value will be used if no value is provided.\n\nExample: `[]`",
          "markdownDescription": "The default value for the array.\nThis value will be used if no value is provided.\n\nExample: `[]`"
        },
        "title": {
          "type": "string",
          "description": "A short title for the schema. This is for documentation purposes only.\n\nExample: `\"User Tags\"`",
          "markdownDescription": "A short title for the schema.\nThis is for documentation purposes only.\n\nExample: `\"User Tags\"`"
        },
        "description": {
          "type": "string",
          "description": "A description of the schema. CommonMark syntax MAY be used for rich text representation.\n\nExample: `\"Array of user tags\"`",
          "markdownDescription": "A description of the schema.\nCommonMark syntax MAY be used for rich text representation.\n\nExample: `\"Array of user tags\"`"
        },
        "xml": {
          "$ref": "#/definitions/XML",
          "description": "XML representation metadata for the schema. Allows for fine-tuned XML model definitions.\n\nExample: `{ name: \"users\", wrapped: true }`",
          "markdownDescription": "XML representation metadata for the schema.\nAllows for fine-tuned XML model definitions.\n\nExample: `{ name: \"users\", wrapped: true }`"
        }
      },
      "required": ["type"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Array Schema\n-----\n\nA schema for array values. Includes array-specific validation properties that are only valid when `type: \"array\"` is specified.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#data-types OpenAPI 3.1.1 Data Types }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#data-types OpenAPI 3.1.0 Data Types }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nArray Schema\n-----\n\nA schema for array values. Includes array-specific validation properties\nthat are only valid when `type: \"array\"` is specified.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#data-types OpenAPI 3.1.1 Data Types }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#data-types OpenAPI 3.1.0 Data Types }  |\n\n-----\nFields\n-----"
    },
    "ObjectSchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "object",
          "description": "The type identifier for object schemas. Must be \"object\".",
          "markdownDescription": "The type identifier for object schemas.\nMust be \"object\"."
        },
        "properties": {
          "type": "object",
          "additionalProperties": {},
          "description": "A map of property names to their schemas. Each property in the object must conform to its corresponding schema.\n\nExample: `{ name: { type: \"string\" }, age: { type: \"number\" } }`",
          "markdownDescription": "A map of property names to their schemas.\nEach property in the object must conform to its corresponding schema.\n\nExample: `{ name: { type: \"string\" }, age: { type: \"number\" } }`"
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of required property names. These properties must be present in the object.\n\nExample: `[\"name\", \"email\"]`",
          "markdownDescription": "An array of required property names.\nThese properties must be present in the object.\n\nExample: `[\"name\", \"email\"]`"
        },
        "additionalProperties": {
          "anyOf": [
            {},
            {
              "type": "boolean"
            }
          ],
          "description": "The schema for additional properties not defined in properties. If false, no additional properties are allowed. If true, any additional properties are allowed. If a schema, additional properties must conform to this schema.\n\nExample: `{ type: \"string\" }` or `false` or `true`",
          "markdownDescription": "The schema for additional properties not defined in properties.\nIf false, no additional properties are allowed.\nIf true, any additional properties are allowed.\nIf a schema, additional properties must conform to this schema.\n\nExample: `{ type: \"string\" }` or `false` or `true`"
        },
        "patternProperties": {
          "type": "object",
          "additionalProperties": {},
          "description": "A map of regex patterns to schemas. Properties whose names match a pattern must conform to the corresponding schema.\n\nExample: `{ \"^S_\": { type: \"string\" } }`",
          "markdownDescription": "A map of regex patterns to schemas.\nProperties whose names match a pattern must conform to the corresponding schema.\n\nExample: `{ \"^S_\": { type: \"string\" } }`"
        },
        "propertyNames": {
          "description": "The schema for property names. All property names in the object must conform to this schema.\n\nExample: `{ type: \"string\", pattern: \"^[A-Za-z][A-Za-z0-9]*$\" }`",
          "markdownDescription": "The schema for property names.\nAll property names in the object must conform to this schema.\n\nExample: `{ type: \"string\", pattern: \"^[A-Za-z][A-Za-z0-9]*$\" }`"
        },
        "minProperties": {
          "type": "number",
          "description": "The minimum number of properties in the object. Must be a non-negative integer.\n\nExample: `1`",
          "markdownDescription": "The minimum number of properties in the object.\nMust be a non-negative integer.\n\nExample: `1`"
        },
        "maxProperties": {
          "type": "number",
          "description": "The maximum number of properties in the object. Must be a non-negative integer.\n\nExample: `10`",
          "markdownDescription": "The maximum number of properties in the object.\nMust be a non-negative integer.\n\nExample: `10`"
        },
        "dependentRequired": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": "A map of property names to arrays of required properties. If a property is present, the properties in its array must also be present.\n\nExample: `{ credit_card: [\"billing_address\"] }`",
          "markdownDescription": "A map of property names to arrays of required properties.\nIf a property is present, the properties in its array must also be present.\n\nExample: `{ credit_card: [\"billing_address\"] }`"
        },
        "dependentSchemas": {
          "type": "object",
          "additionalProperties": {},
          "description": "A map of property names to schemas. If a property is present, the object must conform to the corresponding schema.\n\nExample: `{ credit_card: { type: \"object\", properties: { number: { type: \"string\" } } } }`",
          "markdownDescription": "A map of property names to schemas.\nIf a property is present, the object must conform to the corresponding schema.\n\nExample: `{ credit_card: { type: \"object\", properties: { number: { type: \"string\" } } } }`"
        },
        "enum": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {}
          },
          "description": "An array of allowed values for the object. The value must be one of the values in this array.\n\nExample: `[{ name: \"John\" }, { name: \"Jane\" }]`",
          "markdownDescription": "An array of allowed values for the object.\nThe value must be one of the values in this array.\n\nExample: `[{ name: \"John\" }, { name: \"Jane\" }]`"
        },
        "const": {
          "type": "object",
          "additionalProperties": {},
          "description": "A single allowed value for the object. The value must be exactly this value.\n\nExample: `{ name: \"John\" }`",
          "markdownDescription": "A single allowed value for the object.\nThe value must be exactly this value.\n\nExample: `{ name: \"John\" }`"
        },
        "example": {
          "type": "object",
          "additionalProperties": {},
          "description": "An example value for the object. This is for documentation purposes only.\n\nExample: `{ name: \"John\" }`",
          "markdownDescription": "An example value for the object.\nThis is for documentation purposes only.\n\nExample: `{ name: \"John\" }`"
        },
        "examples": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {}
          },
          "description": "An array of example values for the object. These are for documentation purposes only.\n\nExample: `[{ name: \"John\", age: 30 }]`",
          "markdownDescription": "An array of example values for the object.\nThese are for documentation purposes only.\n\nExample: `[{ name: \"John\", age: 30 }]`"
        },
        "default": {
          "type": "object",
          "additionalProperties": {},
          "description": "The default value for the object. This value will be used if no value is provided.\n\nExample: `{}`",
          "markdownDescription": "The default value for the object.\nThis value will be used if no value is provided.\n\nExample: `{}`"
        },
        "title": {
          "type": "string",
          "description": "A short title for the schema. This is for documentation purposes only.\n\nExample: `\"User\"`",
          "markdownDescription": "A short title for the schema.\nThis is for documentation purposes only.\n\nExample: `\"User\"`"
        },
        "description": {
          "type": "string",
          "description": "A description of the schema. CommonMark syntax MAY be used for rich text representation.\n\nExample: `\"A user object\"`",
          "markdownDescription": "A description of the schema.\nCommonMark syntax MAY be used for rich text representation.\n\nExample: `\"A user object\"`"
        },
        "xml": {
          "$ref": "#/definitions/XML",
          "description": "XML representation metadata for the schema. Allows for fine-tuned XML model definitions.\n\nExample: `{ name: \"user\", attribute: false }`",
          "markdownDescription": "XML representation metadata for the schema.\nAllows for fine-tuned XML model definitions.\n\nExample: `{ name: \"user\", attribute: false }`"
        }
      },
      "required": ["type"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Object Schema\n-----\n\nA schema for object values. Includes object-specific validation properties that are only valid when `type: \"object\"` is specified.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#data-types OpenAPI 3.1.1 Data Types }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#data-types OpenAPI 3.1.0 Data Types }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nObject Schema\n-----\n\nA schema for object values. Includes object-specific validation properties\nthat are only valid when `type: \"object\"` is specified.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#data-types OpenAPI 3.1.1 Data Types }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#data-types OpenAPI 3.1.0 Data Types }  |\n\n-----\nFields\n-----"
    },
    "NullSchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "null",
          "description": "The type identifier for null schemas. This field is required.",
          "markdownDescription": "The type identifier for null schemas. This field is required.",
          "examples": ["null"]
        },
        "title": {
          "type": "string",
          "description": "A short title for the schema.",
          "markdownDescription": "A short title for the schema.",
          "examples": ["Null Value"]
        },
        "description": {
          "type": "string",
          "description": "A description of the schema. CommonMark syntax MAY be used for rich text representation.",
          "markdownDescription": "A description of the schema. CommonMark syntax MAY be used for rich text representation.",
          "examples": ["Represents a null value"]
        },
        "default": {
          "type": "null",
          "description": "The default value for the schema.",
          "markdownDescription": "The default value for the schema.",
          "examples": [null]
        },
        "examples": {
          "type": "array",
          "items": {
            "type": "null"
          },
          "description": "An array of example values.",
          "markdownDescription": "An array of example values.",
          "examples": [[null]]
        },
        "enum": {
          "type": "array",
          "items": {
            "type": "null"
          },
          "description": "An enumeration of allowed values. For null schemas, this should contain only null.",
          "markdownDescription": "An enumeration of allowed values. For null schemas, this should contain only null.",
          "examples": [[null]]
        },
        "const": {
          "type": "null",
          "description": "A constant allowed value. For null schemas, this should be null.",
          "markdownDescription": "A constant allowed value. For null schemas, this should be null.",
          "examples": [null]
        }
      },
      "required": ["type"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Null Schema\n-----\n\nA schema that represents the null value type. This is part of the JSON Schema specification and is supported in OpenAPI 3.1.x.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#schema-object OpenAPI 3.1.1 Schema Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#schema-object OpenAPI 3.1.0 Schema Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nNull Schema\n-----\n\nA schema that represents the null value type. This is part of the JSON Schema\nspecification and is supported in OpenAPI 3.1.x.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#schema-object OpenAPI 3.1.1 Schema Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#schema-object OpenAPI 3.1.0 Schema Object }  |\n\n-----\nFields\n-----"
    },
    "CompositionSchema": {
      "type": "object",
      "properties": {
        "allOf": {
          "type": "array",
          "items": {},
          "description": "An array of schemas that must all be satisfied. The value must conform to all schemas in the array.\n\nExample: `[{ type: \"object\" }, { properties: { name: { type: \"string\" } } }]`",
          "markdownDescription": "An array of schemas that must all be satisfied.\nThe value must conform to all schemas in the array.\n\nExample: `[{ type: \"object\" }, { properties: { name: { type: \"string\" } } }]`"
        },
        "anyOf": {
          "type": "array",
          "items": {},
          "description": "An array of schemas where at least one must be satisfied. The value must conform to at least one schema in the array.\n\nExample: `[{ type: \"string\" }, { type: \"number\" }]`",
          "markdownDescription": "An array of schemas where at least one must be satisfied.\nThe value must conform to at least one schema in the array.\n\nExample: `[{ type: \"string\" }, { type: \"number\" }]`"
        },
        "oneOf": {
          "type": "array",
          "items": {},
          "description": "An array of schemas where exactly one must be satisfied. The value must conform to exactly one schema in the array.\n\nExample: `[{ type: \"string\" }, { type: \"number\" }]`",
          "markdownDescription": "An array of schemas where exactly one must be satisfied.\nThe value must conform to exactly one schema in the array.\n\nExample: `[{ type: \"string\" }, { type: \"number\" }]`"
        },
        "not": {
          "description": "A schema that must not be satisfied. The value must not conform to this schema.\n\nExample: `{ type: \"string\" }`",
          "markdownDescription": "A schema that must not be satisfied.\nThe value must not conform to this schema.\n\nExample: `{ type: \"string\" }`"
        },
        "if": {
          "description": "A schema for conditional validation. Used with `then` and `else` for conditional logic.\n\nExample: `{ type: \"object\", properties: { type: { const: \"user\" } } }`",
          "markdownDescription": "A schema for conditional validation.\nUsed with `then` and `else` for conditional logic.\n\nExample: `{ type: \"object\", properties: { type: { const: \"user\" } } }`"
        },
        "then": {
          "description": "A schema to apply if the `if` condition is met. The value must conform to this schema if the `if` schema is satisfied.\n\nExample: `{ type: \"object\", properties: { name: { type: \"string\" } } }`",
          "markdownDescription": "A schema to apply if the `if` condition is met.\nThe value must conform to this schema if the `if` schema is satisfied.\n\nExample: `{ type: \"object\", properties: { name: { type: \"string\" } } }`"
        },
        "else": {
          "description": "A schema to apply if the `if` condition is not met. The value must conform to this schema if the `if` schema is not satisfied.\n\nExample: `{ type: \"object\", properties: { id: { type: \"string\" } } }`",
          "markdownDescription": "A schema to apply if the `if` condition is not met.\nThe value must conform to this schema if the `if` schema is not satisfied.\n\nExample: `{ type: \"object\", properties: { id: { type: \"string\" } } }`"
        },
        "enum": {
          "type": "array",
          "items": {},
          "description": "An array of allowed values. The value must be one of the values in this array.\n\nExample: `[\"active\", \"inactive\"]`",
          "markdownDescription": "An array of allowed values.\nThe value must be one of the values in this array.\n\nExample: `[\"active\", \"inactive\"]`"
        },
        "const": {
          "description": "A single allowed value. The value must be exactly this value.\n\nExample: `\"active\"`",
          "markdownDescription": "A single allowed value.\nThe value must be exactly this value.\n\nExample: `\"active\"`"
        },
        "example": {
          "description": "An example value for the composition. This is for documentation purposes only.\n\nExample: `\"example\"`",
          "markdownDescription": "An example value for the composition.\nThis is for documentation purposes only.\n\nExample: `\"example\"`"
        },
        "examples": {
          "type": "array",
          "items": {},
          "description": "An array of example values. These are for documentation purposes only.\n\nExample: `[\"example1\", \"example2\"]`",
          "markdownDescription": "An array of example values.\nThese are for documentation purposes only.\n\nExample: `[\"example1\", \"example2\"]`"
        },
        "default": {
          "description": "The default value. This value will be used if no value is provided.\n\nExample: `\"default\"`",
          "markdownDescription": "The default value.\nThis value will be used if no value is provided.\n\nExample: `\"default\"`"
        },
        "title": {
          "type": "string",
          "description": "A short title for the schema. This is for documentation purposes only.\n\nExample: `\"Composed Schema\"`",
          "markdownDescription": "A short title for the schema.\nThis is for documentation purposes only.\n\nExample: `\"Composed Schema\"`"
        },
        "description": {
          "type": "string",
          "description": "A description of the schema. CommonMark syntax MAY be used for rich text representation.\n\nExample: `\"A schema composed of multiple schemas\"`",
          "markdownDescription": "A description of the schema.\nCommonMark syntax MAY be used for rich text representation.\n\nExample: `\"A schema composed of multiple schemas\"`"
        },
        "xml": {
          "$ref": "#/definitions/XML",
          "description": "XML representation metadata for the schema. Allows for fine-tuned XML model definitions.\n\nExample: `{ name: \"composedSchema\", attribute: false }`",
          "markdownDescription": "XML representation metadata for the schema.\nAllows for fine-tuned XML model definitions.\n\nExample: `{ name: \"composedSchema\", attribute: false }`"
        }
      },
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Composition Schema\n-----\n\nA schema that uses composition keywords (allOf, anyOf, oneOf, not). These keywords are mutually exclusive with $ref, but otherwise can appear with any validation keywords. This schema type supports advanced JSON Schema 2020-12 features like conditional schemas.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#schema-object OpenAPI 3.1.1 Schema Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#schema-object OpenAPI 3.1.0 Schema Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nComposition Schema\n-----\n\nA schema that uses composition keywords (allOf, anyOf, oneOf, not).\nThese keywords are mutually exclusive with $ref, but otherwise can\nappear with any validation keywords. This schema type supports\nadvanced JSON Schema 2020-12 features like conditional schemas.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#schema-object OpenAPI 3.1.1 Schema Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#schema-object OpenAPI 3.1.0 Schema Object }  |\n\n-----\nFields\n-----"
    },
    "Example": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string",
          "description": "Short description for the example.",
          "markdownDescription": "Short description for the example.",
          "examples": ["A user example", "Error response example"]
        },
        "description": {
          "type": "string",
          "description": "Long description for the example. CommonMark syntax MAY be used for rich text representation.",
          "markdownDescription": "Long description for the example. CommonMark syntax MAY be used for rich text representation.",
          "examples": [
            "This example shows a typical user object with all required fields",
            "This example demonstrates an error response when validation fails"
          ]
        },
        "value": {
          "description": "Embedded literal example. The value field and externalValue field are mutually exclusive. To represent examples of media types that cannot naturally represented in JSON or YAML, use a string value to contain the example, escaping where necessary.",
          "markdownDescription": "Embedded literal example. The value field and externalValue field are mutually exclusive.\nTo represent examples of media types that cannot naturally represented in JSON or YAML,\nuse a string value to contain the example, escaping where necessary.",
          "examples": [
            {
              "id": 1,
              "name": "John Doe"
            },
            "example string",
            42
          ]
        },
        "externalValue": {
          "type": "string",
          "description": "A URI that points to the literal example. This provides the capability to reference examples that cannot easily be included in JSON or YAML documents. The value field and externalValue field are mutually exclusive.",
          "markdownDescription": "A URI that points to the literal example. This provides the capability to reference\nexamples that cannot easily be included in JSON or YAML documents. The value field\nand externalValue field are mutually exclusive.",
          "examples": [
            "https://example.com/examples/user-example.json",
            "https://example.com/examples/error-example.xml"
          ]
        }
      },
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Example Object\n-----\n\nIn all cases, the example value is expected to be compatible with the type schema of its associated value. Tooling implementations MAY choose to validate compatibility automatically, and reject the example value(s) if incompatible.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#example-object OpenAPI 3.1.1 Example Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#example-object OpenAPI 3.1.0 Example Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nExample Object\n-----\n\nIn all cases, the example value is expected to be compatible with the type schema\nof its associated value. Tooling implementations MAY choose to validate compatibility\nautomatically, and reject the example value(s) if incompatible.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#example-object OpenAPI 3.1.1 Example Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#example-object OpenAPI 3.1.0 Example Object }  |\n\n-----\nFields\n-----"
    },
    "Reference": {
      "type": "object",
      "properties": {
        "$ref": {
          "type": "string",
          "description": "The reference string. This field is required and must be a valid JSON Reference. It can reference internal components using `#/` or external resources using URLs.",
          "markdownDescription": "The reference string. This field is required and must be a valid JSON Reference.\nIt can reference internal components using `#/` or external resources using URLs.",
          "examples": [
            "#/components/schemas/User",
            "#/components/responses/NotFound",
            "https://example.com/schemas/User.json"
          ]
        },
        "description": {
          "type": "string",
          "description": "A description of the referenced object. This can be used to provide additional context about what the referenced object represents.",
          "markdownDescription": "A description of the referenced object. This can be used to provide\nadditional context about what the referenced object represents.",
          "examples": [
            "A user object containing user information",
            "Standard error response for not found resources"
          ]
        },
        "summary": {
          "type": "string",
          "description": "A short summary of the referenced object. This can be used to provide a brief overview of what the referenced object represents.",
          "markdownDescription": "A short summary of the referenced object. This can be used to provide\na brief overview of what the referenced object represents.",
          "examples": ["User schema", "Not found response"]
        }
      },
      "required": ["$ref"],
      "additionalProperties": false,
      "description": "----- Reference Object\n-----\n\nA simple object to allow referencing other components in the specification, internally and externally. The Reference Object is a special JSON object that allows you to reference other parts of the OpenAPI specification.\n\nThe `$ref` keyword is used to reference other components, and when present, the Reference Object is the only property that should be present (except for `description` and specification extensions).\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#reference-object OpenAPI 3.1.1 Reference Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#reference-object OpenAPI 3.1.0 Reference Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nReference Object\n-----\n\nA simple object to allow referencing other components in the specification,\ninternally and externally. The Reference Object is a special JSON object\nthat allows you to reference other parts of the OpenAPI specification.\n\nThe `$ref` keyword is used to reference other components, and when present,\nthe Reference Object is the only property that should be present (except\nfor `description` and specification extensions).\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#reference-object OpenAPI 3.1.1 Reference Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#reference-object OpenAPI 3.1.0 Reference Object }  |\n\n-----\nFields\n-----"
    },
    "MediaType": {
      "type": "object",
      "properties": {
        "schema": {
          "$ref": "#/definitions/Schema",
          "description": "The schema defining the content of the request, response, or parameter.",
          "markdownDescription": "The schema defining the content of the request, response, or parameter.",
          "examples": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "example": {
          "description": "Example of the media type. The example SHOULD match the specified schema and encoding properties if present. The example field is mutually exclusive of the examples field. Furthermore, if referencing a schema that contains an example, the example value SHALL override the example provided by the schema.",
          "markdownDescription": "Example of the media type. The example SHOULD match the specified schema and encoding\nproperties if present. The example field is mutually exclusive of the examples field.\nFurthermore, if referencing a schema that contains an example, the example value\nSHALL override the example provided by the schema.",
          "examples": [
            {
              "id": 1,
              "name": "John Doe"
            },
            "example string",
            42
          ]
        },
        "examples": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/Example"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "Examples of the media type. Each example SHOULD contain a value in the correct format as specified in the media type encoding. The examples field is mutually exclusive of the example field. Furthermore, if referencing a schema that contains an example, the examples value SHALL override the example provided by the schema.",
          "markdownDescription": "Examples of the media type. Each example SHOULD contain a value in the correct format\nas specified in the media type encoding. The examples field is mutually exclusive\nof the example field. Furthermore, if referencing a schema that contains an example,\nthe examples value SHALL override the example provided by the schema.",
          "examples": [
            {
              "user1": {
                "summary": "A user example",
                "value": {
                  "id": 1,
                  "name": "John"
                }
              }
            }
          ]
        },
        "encoding": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Encoding"
          },
          "description": "A map between a property name and its encoding information. The key, being the property name, MUST exist in the schema as a property. The encoding object SHALL only apply to requestBody objects when the media type is multipart or application/x-www-form-urlencoded.",
          "markdownDescription": "A map between a property name and its encoding information. The key, being the property\nname, MUST exist in the schema as a property. The encoding object SHALL only apply to\nrequestBody objects when the media type is multipart or application/x-www-form-urlencoded.",
          "examples": [
            {
              "file": {
                "contentType": "image/png"
              },
              "description": {
                "contentType": "text/plain"
              }
            }
          ]
        }
      },
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Media Type Object\n-----\n\nEach Media Type Object provides schema and examples for the media type identified by its key. Media Type Objects can be used in a Content Object.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#media-type-object OpenAPI 3.1.1 Media Type Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#media-type-object OpenAPI 3.1.0 Media Type Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nMedia Type Object\n-----\n\nEach Media Type Object provides schema and examples for the media type identified by its key.\nMedia Type Objects can be used in a Content Object.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#media-type-object OpenAPI 3.1.1 Media Type Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#media-type-object OpenAPI 3.1.0 Media Type Object }  |\n\n-----\nFields\n-----"
    },
    "Encoding": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string",
          "description": "The Content-Type for encoding a specific property. Default value depends on the property type: for string with format being binary – application/octet-stream; for other primitive types – text/plain; for object – application/json; for array – the default is determined based on the inner type.",
          "markdownDescription": "The Content-Type for encoding a specific property. Default value depends on the\nproperty type: for string with format being binary – application/octet-stream;\nfor other primitive types – text/plain; for object – application/json;\nfor array – the default is determined based on the inner type.",
          "examples": ["image/png", "application/json", "text/plain"]
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/Header"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "A map allowing additional information to be provided as headers, for example Content-Disposition. Content-Type is described separately and SHALL be ignored in this section. This property SHALL be ignored if the request body media type is not a multipart.",
          "markdownDescription": "A map allowing additional information to be provided as headers, for example\nContent-Disposition. Content-Type is described separately and SHALL be ignored\nin this section. This property SHALL be ignored if the request body media type\nis not a multipart.",
          "examples": [
            {
              "Content-Disposition": {
                "description": "File attachment",
                "schema": {
                  "type": "string"
                }
              }
            }
          ]
        },
        "style": {
          "type": "string",
          "description": "Describes how a specific property value will be serialized depending on its type. See Parameter Object for details on the style property. The behavior follows the same values as query parameters, including default values. This property SHALL be ignored if the request body media type is not application/x-www-form-urlencoded or multipart/form-data.",
          "markdownDescription": "Describes how a specific property value will be serialized depending on its type.\nSee Parameter Object for details on the style property. The behavior follows the\nsame values as query parameters, including default values. This property SHALL be\nignored if the request body media type is not application/x-www-form-urlencoded\nor multipart/form-data.",
          "examples": ["form", "spaceDelimited", "pipeDelimited", "deepObject"]
        },
        "explode": {
          "type": "boolean",
          "description": "When this is true, property values of type array or object generate separate parameters for each value of the array or key-value pair of the map. For other types of properties this property has no effect. When style is form, the default value is true. For all other styles, the default value is false. This property SHALL be ignored if the request body media type is not application/x-www-form-urlencoded or multipart/form-data.",
          "markdownDescription": "When this is true, property values of type array or object generate separate\nparameters for each value of the array or key-value pair of the map. For other\ntypes of properties this property has no effect. When style is form, the default\nvalue is true. For all other styles, the default value is false. This property\nSHALL be ignored if the request body media type is not application/x-www-form-urlencoded\nor multipart/form-data.",
          "examples": [true, false]
        },
        "allowReserved": {
          "type": "boolean",
          "description": "Determines whether the parameter value SHOULD allow reserved characters, as defined by RFC3986 :/?#[]@!$&'()*+,;= to be included without percent-encoding. The default value is false. This property SHALL be ignored if the request body media type is not application/x-www-form-urlencoded.",
          "markdownDescription": "Determines whether the parameter value SHOULD allow reserved characters, as defined\nby RFC3986 :/?#[]@!$&'()*+,;= to be included without percent-encoding. The default\nvalue is false. This property SHALL be ignored if the request body media type is\nnot application/x-www-form-urlencoded.",
          "examples": [true, false]
        }
      },
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Encoding Object\n-----\n\nA single encoding definition applied to a single schema property.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#encoding-object OpenAPI 3.1.1 Encoding Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#encoding-object OpenAPI 3.1.0 Encoding Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nEncoding Object\n-----\n\nA single encoding definition applied to a single schema property.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#encoding-object OpenAPI 3.1.1 Encoding Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#encoding-object OpenAPI 3.1.0 Encoding Object }  |\n\n-----\nFields\n-----"
    },
    "Header": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A brief description of the header. This could contain examples of use. CommonMark syntax MAY be used for rich text representation.",
          "markdownDescription": "A brief description of the header. This could contain examples of use.\nCommonMark syntax MAY be used for rich text representation.",
          "examples": ["Rate limit per hour", "Custom authentication token"]
        },
        "required": {
          "type": "boolean",
          "description": "Determines whether this header is mandatory. The property MAY be included and its default value is false.",
          "markdownDescription": "Determines whether this header is mandatory. The property MAY be included and its\ndefault value is false.",
          "examples": [true, false]
        },
        "deprecated": {
          "type": "boolean",
          "description": "Specifies that a header is deprecated and SHOULD be transitioned out of usage. Default value is false.",
          "markdownDescription": "Specifies that a header is deprecated and SHOULD be transitioned out of usage.\nDefault value is false.",
          "examples": [true, false]
        },
        "allowEmptyValue": {
          "type": "boolean",
          "description": "Sets the ability to pass empty-valued headers. This is valid only for headers and allows sending a header with an empty value. Default value is false.",
          "markdownDescription": "Sets the ability to pass empty-valued headers. This is valid only for headers\nand allows sending a header with an empty value. Default value is false.",
          "examples": [true, false]
        },
        "style": {
          "type": "string",
          "description": "Describes how the header value will be serialized. The default value is \"simple\".",
          "markdownDescription": "Describes how the header value will be serialized. The default value is \"simple\".",
          "examples": ["simple", "form"]
        },
        "explode": {
          "type": "boolean",
          "description": "When this is true, header values of type array or object generate separate headers for each value of the array or key-value pair of the map. For other types of headers this property has no effect. When style is form, the default value is true. For all other styles, the default value is false.",
          "markdownDescription": "When this is true, header values of type array or object generate separate headers\nfor each value of the array or key-value pair of the map. For other types of headers\nthis property has no effect. When style is form, the default value is true. For all other\nstyles, the default value is false.",
          "examples": [true, false]
        },
        "allowReserved": {
          "type": "boolean",
          "description": "Determines whether the header value SHOULD allow reserved characters, as defined by RFC3986 :/?#[]@!$&'()*+,;= to be included without percent-encoding. The default value is false.",
          "markdownDescription": "Determines whether the header value SHOULD allow reserved characters, as defined by\nRFC3986 :/?#[]@!$&'()*+,;= to be included without percent-encoding. The default value is false.",
          "examples": [true, false]
        },
        "schema": {
          "$ref": "#/definitions/Schema",
          "description": "The schema defining the type used for the header. This field is mutually exclusive with the content field.",
          "markdownDescription": "The schema defining the type used for the header. This field is mutually exclusive\nwith the content field.",
          "examples": [
            {
              "type": "string"
            },
            {
              "type": "integer",
              "minimum": 0
            }
          ]
        },
        "example": {
          "description": "Example of the header's potential value. The example SHOULD match the specified schema and encoding properties if present. The example field is mutually exclusive of the examples field.",
          "markdownDescription": "Example of the header's potential value. The example SHOULD match the specified\nschema and encoding properties if present. The example field is mutually exclusive\nof the examples field.",
          "examples": ["example value", 42]
        },
        "examples": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/Example"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "Examples of the header's potential value. Each example SHOULD contain a value in the correct format as specified in the header encoding. The examples field is mutually exclusive of the example field.",
          "markdownDescription": "Examples of the header's potential value. Each example SHOULD contain a value in\nthe correct format as specified in the header encoding. The examples field is\nmutually exclusive of the example field.",
          "examples": [
            {
              "header1": {
                "summary": "A header example",
                "value": "example value"
              }
            }
          ]
        },
        "content": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MediaType"
          },
          "description": "A map containing the representations for the header. The key is the media type and the value describes it. The map MUST only contain one entry. This field is mutually exclusive with the schema field.",
          "markdownDescription": "A map containing the representations for the header. The key is the media type\nand the value describes it. The map MUST only contain one entry. This field is\nmutually exclusive with the schema field.",
          "examples": [
            {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          ]
        }
      },
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Header Object\n-----\n\nThe Header Object follows the structure of the Parameter Object with the following changes: 1. `name` MUST NOT be specified, it is given in the corresponding headers map. 2. `in` MUST NOT be specified, it is implicitly in header. 3. All traits that are affected by the location MUST be applicable to a location of header    (for example, style).\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#header-object OpenAPI 3.1.1 Header Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#header-object OpenAPI 3.1.0 Header Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nHeader Object\n-----\n\nThe Header Object follows the structure of the Parameter Object with the following changes:\n1. `name` MUST NOT be specified, it is given in the corresponding headers map.\n2. `in` MUST NOT be specified, it is implicitly in header.\n3. All traits that are affected by the location MUST be applicable to a location of header\n   (for example, style).\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#header-object OpenAPI 3.1.1 Header Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#header-object OpenAPI 3.1.0 Header Object }  |\n\n-----\nFields\n-----"
    },
    "RequestBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A brief description of the request body. This could contain examples of use. CommonMark syntax MAY be used for rich text representation.",
          "markdownDescription": "A brief description of the request body. This could contain examples of use.\nCommonMark syntax MAY be used for rich text representation.",
          "examples": ["User data to create", "File upload with metadata"]
        },
        "content": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MediaType"
          },
          "description": "The content of the request body. The key is a media type or media type range and the value describes it. For request bodies that are sent using multipart/form-data, the encoding property is used to describe the encoding of the request body.",
          "markdownDescription": "The content of the request body. The key is a media type or media type range and\nthe value describes it. For request bodies that are sent using multipart/form-data,\nthe encoding property is used to describe the encoding of the request body.",
          "examples": [
            {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          ]
        },
        "required": {
          "type": "boolean",
          "description": "Determines if the request body is required in the request. Defaults to false.",
          "markdownDescription": "Determines if the request body is required in the request. Defaults to false.",
          "examples": [true, false]
        }
      },
      "required": ["content"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Request Body Object\n-----\n\nDescribes a single request body. A request body is the payload sent with an HTTP request. The request body is only supported in HTTP methods where the HTTP 1.1 specification RFC7231 has explicitly defined semantics for request bodies.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#request-body-object OpenAPI 3.1.1 Request Body Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#request-body-object OpenAPI 3.1.0 Request Body Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nRequest Body Object\n-----\n\nDescribes a single request body. A request body is the payload sent with an HTTP request.\nThe request body is only supported in HTTP methods where the HTTP 1.1 specification\nRFC7231 has explicitly defined semantics for request bodies.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#request-body-object OpenAPI 3.1.1 Request Body Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#request-body-object OpenAPI 3.1.0 Request Body Object }  |\n\n-----\nFields\n-----"
    },
    "ResponsesMap": {
      "type": "object",
      "properties": {
        "100": {
          "$ref": "#/definitions/Response",
          "description": "100 Continue\n\nIndicates that the initial part of the request has been received and the client should continue with the request.\n\nThe server has received the request headers and the client should proceed to send the request body.\n\nUsed in scenarios where the client needs to send a large request body and wants to confirm the server is ready to receive it before sending the data. Commonly used with `Expect: 100-continue` header for file uploads, API requests with large payloads, or when implementing optimistic request patterns.\n\nThe server is ready to process the request and the client can proceed with sending the request body. This prevents unnecessary data transmission if the server would reject the request based on headers alone.",
          "markdownDescription": "100 Continue\n\nIndicates that the initial part of the request has been received and the client should continue with the request.\n\nThe server has received the request headers and the client should proceed to send the request body.\n\nUsed in scenarios where the client needs to send a large request body and wants to confirm the server is ready to receive it before sending the data. Commonly used with `Expect: 100-continue` header for file uploads, API requests with large payloads, or when implementing optimistic request patterns.\n\nThe server is ready to process the request and the client can proceed with sending the request body. This prevents unnecessary data transmission if the server would reject the request based on headers alone."
        },
        "101": {
          "$ref": "#/definitions/Response",
          "description": "101 Switching Protocols\n\nIndicates that the server is switching protocols as requested by the client.\n\nThe server agrees to change the application protocol within the current connection, typically from HTTP to WebSocket or other protocols.\n\nPrimarily used for WebSocket connections where the client sends an `Upgrade: websocket` header and the server responds with 101 to establish the WebSocket connection. Also used for HTTP/2 upgrades, Server-Sent Events (SSE), or other protocol switching scenarios.\n\nThe connection will continue using a different protocol. The response headers will contain the new protocol information, and subsequent communication will use the upgraded protocol.",
          "markdownDescription": "101 Switching Protocols\n\nIndicates that the server is switching protocols as requested by the client.\n\nThe server agrees to change the application protocol within the current connection, typically from HTTP to WebSocket or other protocols.\n\nPrimarily used for WebSocket connections where the client sends an `Upgrade: websocket` header and the server responds with 101 to establish the WebSocket connection. Also used for HTTP/2 upgrades, Server-Sent Events (SSE), or other protocol switching scenarios.\n\nThe connection will continue using a different protocol. The response headers will contain the new protocol information, and subsequent communication will use the upgraded protocol."
        },
        "102": {
          "$ref": "#/definitions/Response",
          "description": "102 Processing\n\nIndicates that the server has received and is processing the request, but no response is available yet.\n\nThe server has accepted the request and is processing it, but the processing is taking longer than normal and the client should continue waiting.\n\nPrimarily used in WebDAV (Web Distributed Authoring and Versioning) environments for long-running operations like file uploads, batch operations, or complex data processing. Helps prevent client timeouts during extended processing periods.\n\nThe request is being processed and the client should continue waiting. This prevents timeout issues during long-running operations and provides feedback that the server is actively working on the request.",
          "markdownDescription": "102 Processing\n\nIndicates that the server has received and is processing the request, but no response is available yet.\n\nThe server has accepted the request and is processing it, but the processing is taking longer than normal and the client should continue waiting.\n\nPrimarily used in WebDAV (Web Distributed Authoring and Versioning) environments for long-running operations like file uploads, batch operations, or complex data processing. Helps prevent client timeouts during extended processing periods.\n\nThe request is being processed and the client should continue waiting. This prevents timeout issues during long-running operations and provides feedback that the server is actively working on the request."
        },
        "103": {
          "$ref": "#/definitions/Response",
          "description": "103 Early Hints\n\nProvides early hints about the response that will be sent, allowing the client to start processing before the full response is ready.\n\nThe server is sending preliminary information about the response headers and resources that will be needed, enabling the client to start optimization processes early.\n\nUsed for performance optimization, particularly in web applications where the server can hint about resources (CSS, JavaScript, fonts) that will be needed for the final response. Allows browsers to start preloading resources before the main response is ready, significantly improving perceived performance.\n\nThe client can start preparing for the response based on the hints provided. This is especially valuable for web applications where resource preloading can improve user experience.",
          "markdownDescription": "103 Early Hints\n\nProvides early hints about the response that will be sent, allowing the client to start processing before the full response is ready.\n\nThe server is sending preliminary information about the response headers and resources that will be needed, enabling the client to start optimization processes early.\n\nUsed for performance optimization, particularly in web applications where the server can hint about resources (CSS, JavaScript, fonts) that will be needed for the final response. Allows browsers to start preloading resources before the main response is ready, significantly improving perceived performance.\n\nThe client can start preparing for the response based on the hints provided. This is especially valuable for web applications where resource preloading can improve user experience."
        },
        "104": {
          "$ref": "#/definitions/Response",
          "description": "104 Upload Resumption Supported — TEMPORARY\n\nIndicates that the server supports resumable uploads for the requested resource.\n\nThe server is indicating that it can handle interrupted uploads and allows the client to resume uploading from where it left off.\n\nUsed in file upload scenarios where large files might be interrupted due to network issues, browser crashes, or other problems. Enables clients to resume uploads without starting over, improving reliability for large file transfers and reducing bandwidth waste.\n\nThe client can implement resumable upload logic, typically using range requests or specialized upload protocols. This is particularly valuable for mobile applications and unreliable network conditions.",
          "markdownDescription": "104 Upload Resumption Supported — TEMPORARY\n\nIndicates that the server supports resumable uploads for the requested resource.\n\nThe server is indicating that it can handle interrupted uploads and allows the client to resume uploading from where it left off.\n\nUsed in file upload scenarios where large files might be interrupted due to network issues, browser crashes, or other problems. Enables clients to resume uploads without starting over, improving reliability for large file transfers and reducing bandwidth waste.\n\nThe client can implement resumable upload logic, typically using range requests or specialized upload protocols. This is particularly valuable for mobile applications and unreliable network conditions."
        },
        "200": {
          "$ref": "#/definitions/Response",
          "description": "200 OK\n\nIndicates that the request has succeeded and the response contains the requested data.\n\nThe request was processed successfully and the response body contains the requested resource or data.\n\nThe most common success response for GET requests, API endpoints that return data, and successful operations. Used for retrieving resources, executing queries, and any operation that completes successfully with data to return.\n\nThe operation completed successfully and the response body contains the requested information. This is the standard success response for most API operations.",
          "markdownDescription": "200 OK\n\nIndicates that the request has succeeded and the response contains the requested data.\n\nThe request was processed successfully and the response body contains the requested resource or data.\n\nThe most common success response for GET requests, API endpoints that return data, and successful operations. Used for retrieving resources, executing queries, and any operation that completes successfully with data to return.\n\nThe operation completed successfully and the response body contains the requested information. This is the standard success response for most API operations."
        },
        "201": {
          "$ref": "#/definitions/Response",
          "description": "201 Created\n\nIndicates that the request has succeeded and a new resource has been created as a result.\n\nThe request was processed successfully and resulted in the creation of a new resource. The response typically includes the location of the newly created resource.\n\nUsed for POST requests that create new resources (users, posts, files, etc.). The response should include a `Location` header pointing to the newly created resource. Common in REST APIs for resource creation operations.\n\nA new resource was successfully created and the response contains information about the created resource, typically including its ID and location.",
          "markdownDescription": "201 Created\n\nIndicates that the request has succeeded and a new resource has been created as a result.\n\nThe request was processed successfully and resulted in the creation of a new resource. The response typically includes the location of the newly created resource.\n\nUsed for POST requests that create new resources (users, posts, files, etc.). The response should include a `Location` header pointing to the newly created resource. Common in REST APIs for resource creation operations.\n\nA new resource was successfully created and the response contains information about the created resource, typically including its ID and location."
        },
        "202": {
          "$ref": "#/definitions/Response",
          "description": "202 Accepted\n\nIndicates that the request has been accepted for processing, but the processing has not been completed.\n\nThe request was valid and accepted, but the server will process it asynchronously. The processing may or may not eventually succeed.\n\nUsed for asynchronous operations like background jobs, batch processing, email sending, or any operation that takes time to complete. The client should not assume the operation succeeded based on this response alone.\n\nThe request was accepted and is being processed asynchronously. The client should check the status separately or wait for a callback/webhook to know the final result.",
          "markdownDescription": "202 Accepted\n\nIndicates that the request has been accepted for processing, but the processing has not been completed.\n\nThe request was valid and accepted, but the server will process it asynchronously. The processing may or may not eventually succeed.\n\nUsed for asynchronous operations like background jobs, batch processing, email sending, or any operation that takes time to complete. The client should not assume the operation succeeded based on this response alone.\n\nThe request was accepted and is being processed asynchronously. The client should check the status separately or wait for a callback/webhook to know the final result."
        },
        "203": {
          "$ref": "#/definitions/Response",
          "description": "203 Non-Authoritative Information\n\nIndicates that the request was successful, but the information returned is from a transformed or cached version of the original resource.\n\nThe response is successful but the data may have been modified by a transforming proxy or cache, and may not be the authoritative version.\n\nUsed when responses come from caches, proxies, or transformation services where the data might be slightly different from the original. Common in CDN scenarios or when data is processed through middleware.\n\nThe request succeeded but the response data may not be the most current or authoritative version. The client should be aware that the data might be cached or transformed.",
          "markdownDescription": "203 Non-Authoritative Information\n\nIndicates that the request was successful, but the information returned is from a transformed or cached version of the original resource.\n\nThe response is successful but the data may have been modified by a transforming proxy or cache, and may not be the authoritative version.\n\nUsed when responses come from caches, proxies, or transformation services where the data might be slightly different from the original. Common in CDN scenarios or when data is processed through middleware.\n\nThe request succeeded but the response data may not be the most current or authoritative version. The client should be aware that the data might be cached or transformed."
        },
        "204": {
          "$ref": "#/definitions/Response",
          "description": "204 No Content\n\nIndicates that the request has succeeded but there is no content to return in the response body.\n\nThe request was processed successfully but the response body is intentionally empty. The client should not expect any content.\n\nUsed for DELETE operations, PUT requests that don't return data, or any operation where success is indicated by the absence of content. Common in REST APIs for operations that modify state without returning data.\n\nThe operation completed successfully but no data is returned. The client should not attempt to parse a response body.",
          "markdownDescription": "204 No Content\n\nIndicates that the request has succeeded but there is no content to return in the response body.\n\nThe request was processed successfully but the response body is intentionally empty. The client should not expect any content.\n\nUsed for DELETE operations, PUT requests that don't return data, or any operation where success is indicated by the absence of content. Common in REST APIs for operations that modify state without returning data.\n\nThe operation completed successfully but no data is returned. The client should not attempt to parse a response body."
        },
        "205": {
          "$ref": "#/definitions/Response",
          "description": "205 Reset Content\n\nIndicates that the request has succeeded and the client should reset the document view that caused the request to be sent.\n\nThe request was processed successfully and the client should clear any form data or reset the user interface state.\n\nUsed in web applications where form submissions should clear the form after successful processing, or when the client needs to reset its state. Common in form handling and user interface operations.\n\nThe operation succeeded and the client should reset its current state, typically clearing forms or resetting the user interface.",
          "markdownDescription": "205 Reset Content\n\nIndicates that the request has succeeded and the client should reset the document view that caused the request to be sent.\n\nThe request was processed successfully and the client should clear any form data or reset the user interface state.\n\nUsed in web applications where form submissions should clear the form after successful processing, or when the client needs to reset its state. Common in form handling and user interface operations.\n\nThe operation succeeded and the client should reset its current state, typically clearing forms or resetting the user interface."
        },
        "206": {
          "$ref": "#/definitions/Response",
          "description": "206 Partial Content\n\nIndicates that the server is delivering only part of the resource due to a range request.\n\nThe request included a Range header and the server is returning only the requested portion of the resource, along with information about the range delivered.\n\nUsed for resumable downloads, video streaming, large file transfers, and any scenario where the client requests a specific portion of a resource. Enables efficient handling of large files and interrupted downloads.\n\nThe response contains only a portion of the requested resource. The client should expect partial content and may need to make additional requests for the complete resource.",
          "markdownDescription": "206 Partial Content\n\nIndicates that the server is delivering only part of the resource due to a range request.\n\nThe request included a Range header and the server is returning only the requested portion of the resource, along with information about the range delivered.\n\nUsed for resumable downloads, video streaming, large file transfers, and any scenario where the client requests a specific portion of a resource. Enables efficient handling of large files and interrupted downloads.\n\nThe response contains only a portion of the requested resource. The client should expect partial content and may need to make additional requests for the complete resource."
        },
        "207": {
          "$ref": "#/definitions/Response",
          "description": "207 Multi-Status\n\nIndicates that multiple independent operations might have been performed, and the status of each operation is reported in the response body.\n\nThe response contains multiple status codes for different operations, typically in XML format with individual operation results.\n\nUsed in WebDAV environments for batch operations, bulk file operations, or any scenario where multiple independent operations are performed in a single request. Common in file management systems and collaborative editing platforms.\n\nMultiple operations were attempted and the response contains the status of each individual operation. The client should parse the response body to determine which operations succeeded or failed.",
          "markdownDescription": "207 Multi-Status\n\nIndicates that multiple independent operations might have been performed, and the status of each operation is reported in the response body.\n\nThe response contains multiple status codes for different operations, typically in XML format with individual operation results.\n\nUsed in WebDAV environments for batch operations, bulk file operations, or any scenario where multiple independent operations are performed in a single request. Common in file management systems and collaborative editing platforms.\n\nMultiple operations were attempted and the response contains the status of each individual operation. The client should parse the response body to determine which operations succeeded or failed."
        },
        "208": {
          "$ref": "#/definitions/Response",
          "description": "208 Already Reported\n\nIndicates that the members of a DAV binding have already been enumerated in a previous response to this request, and are not being included again.\n\nUsed in WebDAV to avoid repeating the same information in a multi-status response when the same binding has already been reported.\n\nUsed in WebDAV environments to optimize responses by avoiding duplicate information in multi-status responses. Helps reduce response size and improve performance in complex file system operations.\n\nThe information for this binding has already been reported in a previous part of the response. The client should not expect additional information for this specific binding.",
          "markdownDescription": "208 Already Reported\n\nIndicates that the members of a DAV binding have already been enumerated in a previous response to this request, and are not being included again.\n\nUsed in WebDAV to avoid repeating the same information in a multi-status response when the same binding has already been reported.\n\nUsed in WebDAV environments to optimize responses by avoiding duplicate information in multi-status responses. Helps reduce response size and improve performance in complex file system operations.\n\nThe information for this binding has already been reported in a previous part of the response. The client should not expect additional information for this specific binding."
        },
        "226": {
          "$ref": "#/definitions/Response",
          "description": "226 IM Used\n\nIndicates that the server has fulfilled a request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\n\nThe response represents the result of applying instance manipulations (like delta encoding) to the current resource instance.\n\nUsed in scenarios involving delta encoding, instance manipulations, or when the response represents a transformed version of the resource. Common in content delivery networks and systems that optimize data transmission.\n\nThe response contains a manipulated version of the resource, typically optimized for transmission. The client should be aware that the data has been processed or transformed.",
          "markdownDescription": "226 IM Used\n\nIndicates that the server has fulfilled a request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\n\nThe response represents the result of applying instance manipulations (like delta encoding) to the current resource instance.\n\nUsed in scenarios involving delta encoding, instance manipulations, or when the response represents a transformed version of the resource. Common in content delivery networks and systems that optimize data transmission.\n\nThe response contains a manipulated version of the resource, typically optimized for transmission. The client should be aware that the data has been processed or transformed."
        },
        "300": {
          "$ref": "#/definitions/Response",
          "description": "300 Multiple Choices\n\nIndicates that the request has multiple possible responses and the client should choose one.\n\nThe server has multiple representations of the requested resource and the client must choose which one to use.\n\nUsed when content negotiation results in multiple valid options, such as different formats (JSON, XML, HTML) or different languages. The response typically includes a list of available options with their characteristics.\n\nThe client should examine the available options and make a choice, typically by sending another request with more specific preferences or headers.",
          "markdownDescription": "300 Multiple Choices\n\nIndicates that the request has multiple possible responses and the client should choose one.\n\nThe server has multiple representations of the requested resource and the client must choose which one to use.\n\nUsed when content negotiation results in multiple valid options, such as different formats (JSON, XML, HTML) or different languages. The response typically includes a list of available options with their characteristics.\n\nThe client should examine the available options and make a choice, typically by sending another request with more specific preferences or headers."
        },
        "301": {
          "$ref": "#/definitions/Response",
          "description": "301 Moved Permanently\n\nIndicates that the requested resource has been permanently moved to a new location.\n\nThe resource has been permanently relocated and all future requests should be directed to the new URL provided in the Location header.\n\nUsed when resources are permanently relocated, such as when changing domain names, restructuring URLs, or moving content to new locations. Browsers and clients should update their bookmarks and caches.\n\nThe resource has moved permanently and the client should update all references to use the new URL. Search engines and caches should update their indexes.",
          "markdownDescription": "301 Moved Permanently\n\nIndicates that the requested resource has been permanently moved to a new location.\n\nThe resource has been permanently relocated and all future requests should be directed to the new URL provided in the Location header.\n\nUsed when resources are permanently relocated, such as when changing domain names, restructuring URLs, or moving content to new locations. Browsers and clients should update their bookmarks and caches.\n\nThe resource has moved permanently and the client should update all references to use the new URL. Search engines and caches should update their indexes."
        },
        "302": {
          "$ref": "#/definitions/Response",
          "description": "302 Found\n\nIndicates that the requested resource has been temporarily moved to a different location.\n\nThe resource is temporarily available at a different URL, but the original URL should continue to be used for future requests.\n\nUsed for temporary redirects such as maintenance pages, temporary content moves, or when the resource is temporarily unavailable at the original location. The original URL remains valid.\n\nThe resource is temporarily at a different location. The client should follow the redirect but continue using the original URL for future requests.",
          "markdownDescription": "302 Found\n\nIndicates that the requested resource has been temporarily moved to a different location.\n\nThe resource is temporarily available at a different URL, but the original URL should continue to be used for future requests.\n\nUsed for temporary redirects such as maintenance pages, temporary content moves, or when the resource is temporarily unavailable at the original location. The original URL remains valid.\n\nThe resource is temporarily at a different location. The client should follow the redirect but continue using the original URL for future requests."
        },
        "303": {
          "$ref": "#/definitions/Response",
          "description": "303 See Other\n\nIndicates that the response to the request can be found at a different URL and should be retrieved using a GET request.\n\nThe request was processed but the response is available at a different location, and the client should use GET to retrieve it.\n\nUsed in POST-redirect-GET patterns, form submissions that redirect to a results page, or when the response to a POST request should be retrieved via GET. Common in web applications for avoiding duplicate form submissions.\n\nThe client should make a GET request to the provided URL to retrieve the response. This prevents duplicate submissions and provides a clean URL for the result.",
          "markdownDescription": "303 See Other\n\nIndicates that the response to the request can be found at a different URL and should be retrieved using a GET request.\n\nThe request was processed but the response is available at a different location, and the client should use GET to retrieve it.\n\nUsed in POST-redirect-GET patterns, form submissions that redirect to a results page, or when the response to a POST request should be retrieved via GET. Common in web applications for avoiding duplicate form submissions.\n\nThe client should make a GET request to the provided URL to retrieve the response. This prevents duplicate submissions and provides a clean URL for the result."
        },
        "304": {
          "$ref": "#/definitions/Response",
          "description": "304 Not Modified\n\nIndicates that the resource has not been modified since the last request, so the cached version can be used.\n\nThe resource has not changed since the last request, and the client can use its cached version. No response body is included.\n\nUsed for caching optimization when the client sends conditional headers (If-Modified-Since, If-None-Match). Reduces bandwidth usage and improves performance by avoiding unnecessary data transfer.\n\nThe resource has not changed and the client should use its cached version. This is an optimization response that saves bandwidth and improves performance.",
          "markdownDescription": "304 Not Modified\n\nIndicates that the resource has not been modified since the last request, so the cached version can be used.\n\nThe resource has not changed since the last request, and the client can use its cached version. No response body is included.\n\nUsed for caching optimization when the client sends conditional headers (If-Modified-Since, If-None-Match). Reduces bandwidth usage and improves performance by avoiding unnecessary data transfer.\n\nThe resource has not changed and the client should use its cached version. This is an optimization response that saves bandwidth and improves performance."
        },
        "305": {
          "$ref": "#/definitions/Response",
          "description": "305 Use Proxy\n\nIndicates that the requested resource must be accessed through the proxy specified in the Location header.\n\nThe client must use the specified proxy to access the resource. This response is rarely used in modern web applications.\n\nUsed in corporate environments or specific network configurations where resources must be accessed through a particular proxy server. Mostly deprecated in modern web development.\n\nThe client should use the specified proxy to access the resource. This is rarely encountered in modern web applications.",
          "markdownDescription": "305 Use Proxy\n\nIndicates that the requested resource must be accessed through the proxy specified in the Location header.\n\nThe client must use the specified proxy to access the resource. This response is rarely used in modern web applications.\n\nUsed in corporate environments or specific network configurations where resources must be accessed through a particular proxy server. Mostly deprecated in modern web development.\n\nThe client should use the specified proxy to access the resource. This is rarely encountered in modern web applications."
        },
        "306": {
          "$ref": "#/definitions/Response",
          "description": "306 (Unused)\n\nThis status code is reserved and not used in current HTTP specifications.\n\nThis status code was previously used but is now reserved and should not be used in new implementations.\n\nNot used in modern web applications. This code is reserved and should not be implemented.\n\nThis status code should not be encountered in modern web applications.",
          "markdownDescription": "306 (Unused)\n\nThis status code is reserved and not used in current HTTP specifications.\n\nThis status code was previously used but is now reserved and should not be used in new implementations.\n\nNot used in modern web applications. This code is reserved and should not be implemented.\n\nThis status code should not be encountered in modern web applications."
        },
        "307": {
          "$ref": "#/definitions/Response",
          "description": "307 Temporary Redirect\n\nIndicates that the requested resource has been temporarily moved to a different location, and the request method should be preserved.\n\nThe resource is temporarily available at a different URL, and the client should repeat the request using the same method to the new location.\n\nUsed for temporary redirects where the HTTP method (POST, PUT, DELETE) should be preserved. Common in API versioning, temporary maintenance, or when resources are temporarily relocated.\n\nThe resource is temporarily at a different location and the client should repeat the same request method to the new URL.",
          "markdownDescription": "307 Temporary Redirect\n\nIndicates that the requested resource has been temporarily moved to a different location, and the request method should be preserved.\n\nThe resource is temporarily available at a different URL, and the client should repeat the request using the same method to the new location.\n\nUsed for temporary redirects where the HTTP method (POST, PUT, DELETE) should be preserved. Common in API versioning, temporary maintenance, or when resources are temporarily relocated.\n\nThe resource is temporarily at a different location and the client should repeat the same request method to the new URL."
        },
        "308": {
          "$ref": "#/definitions/Response",
          "description": "308 Permanent Redirect\n\nIndicates that the requested resource has been permanently moved to a different location, and the request method should be preserved.\n\nThe resource has been permanently relocated and the client should use the new URL for all future requests, preserving the original HTTP method.\n\nUsed for permanent redirects where the HTTP method should be preserved, such as when moving APIs to new endpoints or restructuring resource URLs. Common in API versioning and permanent relocations.\n\nThe resource has moved permanently and the client should update all references to use the new URL while preserving the original HTTP method.",
          "markdownDescription": "308 Permanent Redirect\n\nIndicates that the requested resource has been permanently moved to a different location, and the request method should be preserved.\n\nThe resource has been permanently relocated and the client should use the new URL for all future requests, preserving the original HTTP method.\n\nUsed for permanent redirects where the HTTP method should be preserved, such as when moving APIs to new endpoints or restructuring resource URLs. Common in API versioning and permanent relocations.\n\nThe resource has moved permanently and the client should update all references to use the new URL while preserving the original HTTP method."
        },
        "400": {
          "$ref": "#/definitions/Response",
          "description": "400 Bad Request\n\nIndicates that the server cannot process the request due to a client error.\n\nThe request syntax is invalid, malformed, or contains incorrect parameters that the server cannot understand or process.\n\nUsed for validation errors, malformed JSON, missing required fields, invalid parameter values, or any client-side error that prevents the server from processing the request. Common in API validation scenarios.\n\nThe client has sent an invalid request and should fix the request before retrying. The response body should contain details about what was wrong with the request.",
          "markdownDescription": "400 Bad Request\n\nIndicates that the server cannot process the request due to a client error.\n\nThe request syntax is invalid, malformed, or contains incorrect parameters that the server cannot understand or process.\n\nUsed for validation errors, malformed JSON, missing required fields, invalid parameter values, or any client-side error that prevents the server from processing the request. Common in API validation scenarios.\n\nThe client has sent an invalid request and should fix the request before retrying. The response body should contain details about what was wrong with the request."
        },
        "401": {
          "$ref": "#/definitions/Response",
          "description": "401 Unauthorized\n\nIndicates that the request requires authentication and the client has not provided valid credentials.\n\nThe request lacks valid authentication credentials or the provided credentials are invalid, expired, or insufficient.\n\nUsed when authentication is required but not provided, when login credentials are invalid, or when the authentication token has expired. Common in protected API endpoints and user authentication flows.\n\nThe client needs to authenticate before accessing the resource. The response should include authentication challenge headers (WWW-Authenticate) indicating how to authenticate.",
          "markdownDescription": "401 Unauthorized\n\nIndicates that the request requires authentication and the client has not provided valid credentials.\n\nThe request lacks valid authentication credentials or the provided credentials are invalid, expired, or insufficient.\n\nUsed when authentication is required but not provided, when login credentials are invalid, or when the authentication token has expired. Common in protected API endpoints and user authentication flows.\n\nThe client needs to authenticate before accessing the resource. The response should include authentication challenge headers (WWW-Authenticate) indicating how to authenticate."
        },
        "402": {
          "$ref": "#/definitions/Response",
          "description": "402 Payment Required\n\nIndicates that the request requires payment before it can be processed.\n\nThe request cannot be fulfilled because payment is required. This status code is reserved for future use in digital payment systems.\n\nUsed in payment-required scenarios, subscription services, or when access to a resource requires payment. Common in freemium models, paid API access, or premium content services.\n\nThe client needs to provide payment information or complete a payment process before accessing the resource. The response should include information about how to make the payment.",
          "markdownDescription": "402 Payment Required\n\nIndicates that the request requires payment before it can be processed.\n\nThe request cannot be fulfilled because payment is required. This status code is reserved for future use in digital payment systems.\n\nUsed in payment-required scenarios, subscription services, or when access to a resource requires payment. Common in freemium models, paid API access, or premium content services.\n\nThe client needs to provide payment information or complete a payment process before accessing the resource. The response should include information about how to make the payment."
        },
        "403": {
          "$ref": "#/definitions/Response",
          "description": "403 Forbidden\n\nIndicates that the server understood the request but refuses to authorize it.\n\nThe client is authenticated but does not have permission to access the requested resource or perform the requested action.\n\nUsed when the user is logged in but lacks the necessary permissions, when access is restricted based on user roles, or when the resource is not accessible to the current user. Common in authorization and access control scenarios.\n\nThe client is authenticated but not authorized to access the resource. The client should not retry the request without additional permissions.",
          "markdownDescription": "403 Forbidden\n\nIndicates that the server understood the request but refuses to authorize it.\n\nThe client is authenticated but does not have permission to access the requested resource or perform the requested action.\n\nUsed when the user is logged in but lacks the necessary permissions, when access is restricted based on user roles, or when the resource is not accessible to the current user. Common in authorization and access control scenarios.\n\nThe client is authenticated but not authorized to access the resource. The client should not retry the request without additional permissions."
        },
        "404": {
          "$ref": "#/definitions/Response",
          "description": "404 Not Found\n\nIndicates that the requested resource could not be found on the server.\n\nThe server cannot find the requested resource at the specified URL, or the resource does not exist.\n\nUsed when a resource doesn't exist, when the URL is incorrect, or when the requested item has been deleted. Common in web applications for missing pages, deleted content, or non-existent API endpoints.\n\nThe requested resource does not exist. The client should verify the URL or check if the resource has been moved or deleted.",
          "markdownDescription": "404 Not Found\n\nIndicates that the requested resource could not be found on the server.\n\nThe server cannot find the requested resource at the specified URL, or the resource does not exist.\n\nUsed when a resource doesn't exist, when the URL is incorrect, or when the requested item has been deleted. Common in web applications for missing pages, deleted content, or non-existent API endpoints.\n\nThe requested resource does not exist. The client should verify the URL or check if the resource has been moved or deleted."
        },
        "405": {
          "$ref": "#/definitions/Response",
          "description": "405 Method Not Allowed\n\nIndicates that the HTTP method used in the request is not allowed for the requested resource.\n\nThe resource exists but the HTTP method (GET, POST, PUT, DELETE, etc.) is not supported for this particular resource.\n\nUsed when a resource only supports certain HTTP methods, such as a read-only endpoint that doesn't allow POST requests, or when the method is not implemented for the specific resource. Common in REST API design.\n\nThe HTTP method is not allowed for this resource. The response should include an Allow header listing the permitted methods.",
          "markdownDescription": "405 Method Not Allowed\n\nIndicates that the HTTP method used in the request is not allowed for the requested resource.\n\nThe resource exists but the HTTP method (GET, POST, PUT, DELETE, etc.) is not supported for this particular resource.\n\nUsed when a resource only supports certain HTTP methods, such as a read-only endpoint that doesn't allow POST requests, or when the method is not implemented for the specific resource. Common in REST API design.\n\nThe HTTP method is not allowed for this resource. The response should include an Allow header listing the permitted methods."
        },
        "406": {
          "$ref": "#/definitions/Response",
          "description": "406 Not Acceptable\n\nIndicates that the server cannot produce a response matching the client's Accept headers.\n\nThe server cannot generate a response in any of the formats requested by the client's Accept headers.\n\nUsed when the client requests a specific content type (JSON, XML, HTML) that the server cannot provide, or when content negotiation fails. Common in API versioning and content type mismatches.\n\nThe server cannot provide the requested content type. The client should check the Accept headers or request a different format.",
          "markdownDescription": "406 Not Acceptable\n\nIndicates that the server cannot produce a response matching the client's Accept headers.\n\nThe server cannot generate a response in any of the formats requested by the client's Accept headers.\n\nUsed when the client requests a specific content type (JSON, XML, HTML) that the server cannot provide, or when content negotiation fails. Common in API versioning and content type mismatches.\n\nThe server cannot provide the requested content type. The client should check the Accept headers or request a different format."
        },
        "407": {
          "$ref": "#/definitions/Response",
          "description": "407 Proxy Authentication Required\n\nIndicates that the client must authenticate with the proxy server before the request can be processed.\n\nThe proxy server requires authentication before it will forward the request to the destination server.\n\nUsed in corporate environments or networks where proxy authentication is required. Common in enterprise networks, VPN connections, or when accessing resources through authenticated proxies.\n\nThe client needs to authenticate with the proxy server. The response should include Proxy-Authenticate headers indicating how to authenticate.",
          "markdownDescription": "407 Proxy Authentication Required\n\nIndicates that the client must authenticate with the proxy server before the request can be processed.\n\nThe proxy server requires authentication before it will forward the request to the destination server.\n\nUsed in corporate environments or networks where proxy authentication is required. Common in enterprise networks, VPN connections, or when accessing resources through authenticated proxies.\n\nThe client needs to authenticate with the proxy server. The response should include Proxy-Authenticate headers indicating how to authenticate."
        },
        "408": {
          "$ref": "#/definitions/Response",
          "description": "408 Request Timeout\n\nIndicates that the server timed out while waiting for the request from the client.\n\nThe server did not receive a complete request within the time it was prepared to wait.\n\nUsed when the client takes too long to send the complete request, when network issues cause delays, or when the server has a timeout policy for request processing. Common in slow network conditions or when clients fail to send complete requests.\n\nThe request timed out and the client should retry the request. The client may need to optimize the request or check network connectivity.",
          "markdownDescription": "408 Request Timeout\n\nIndicates that the server timed out while waiting for the request from the client.\n\nThe server did not receive a complete request within the time it was prepared to wait.\n\nUsed when the client takes too long to send the complete request, when network issues cause delays, or when the server has a timeout policy for request processing. Common in slow network conditions or when clients fail to send complete requests.\n\nThe request timed out and the client should retry the request. The client may need to optimize the request or check network connectivity."
        },
        "409": {
          "$ref": "#/definitions/Response",
          "description": "409 Conflict\n\nIndicates that the request conflicts with the current state of the resource.\n\nThe request cannot be completed due to a conflict with the current state of the resource, such as a version mismatch or concurrent modification.\n\nUsed when trying to create a resource that already exists, when there's a version conflict in concurrent editing, or when the request conflicts with business rules. Common in collaborative editing, version control, and resource creation scenarios.\n\nThe request conflicts with the current state of the resource. The client should resolve the conflict before retrying the request.",
          "markdownDescription": "409 Conflict\n\nIndicates that the request conflicts with the current state of the resource.\n\nThe request cannot be completed due to a conflict with the current state of the resource, such as a version mismatch or concurrent modification.\n\nUsed when trying to create a resource that already exists, when there's a version conflict in concurrent editing, or when the request conflicts with business rules. Common in collaborative editing, version control, and resource creation scenarios.\n\nThe request conflicts with the current state of the resource. The client should resolve the conflict before retrying the request."
        },
        "410": {
          "$ref": "#/definitions/Response",
          "description": "410 Gone\n\nIndicates that the requested resource is no longer available and will not be available again.\n\nThe resource has been permanently removed and will not be restored. This is different from 404, which indicates the resource was never found.\n\nUsed when content has been permanently deleted, when resources have been removed and will not be restored, or when temporary content has expired. Common in content management systems and temporary resource scenarios.\n\nThe resource has been permanently removed and will not be available again. The client should not retry the request and should update any references to this resource.",
          "markdownDescription": "410 Gone\n\nIndicates that the requested resource is no longer available and will not be available again.\n\nThe resource has been permanently removed and will not be restored. This is different from 404, which indicates the resource was never found.\n\nUsed when content has been permanently deleted, when resources have been removed and will not be restored, or when temporary content has expired. Common in content management systems and temporary resource scenarios.\n\nThe resource has been permanently removed and will not be available again. The client should not retry the request and should update any references to this resource."
        },
        "411": {
          "$ref": "#/definitions/Response",
          "description": "411 Length Required\n\nIndicates that the server requires a Content-Length header in the request.\n\nThe server cannot process the request without knowing the exact length of the request body.\n\nUsed when the server needs to know the exact size of the request body before processing, such as for file uploads, large data transfers, or when implementing specific security measures. Common in file upload scenarios and certain API endpoints.\n\nThe client must include a Content-Length header in the request. The client should retry the request with the proper Content-Length header.",
          "markdownDescription": "411 Length Required\n\nIndicates that the server requires a Content-Length header in the request.\n\nThe server cannot process the request without knowing the exact length of the request body.\n\nUsed when the server needs to know the exact size of the request body before processing, such as for file uploads, large data transfers, or when implementing specific security measures. Common in file upload scenarios and certain API endpoints.\n\nThe client must include a Content-Length header in the request. The client should retry the request with the proper Content-Length header."
        },
        "412": {
          "$ref": "#/definitions/Response",
          "description": "412 Precondition Failed\n\nIndicates that one or more preconditions in the request headers were not met.\n\nThe server cannot meet the conditions specified in the request headers, such as If-Match, If-None-Match, If-Modified-Since, or If-Unmodified-Since.\n\nUsed in conditional requests where the client specifies conditions that must be met, such as version checking, cache validation, or optimistic concurrency control. Common in collaborative editing and caching scenarios.\n\nThe preconditions in the request were not met. The client should check the conditions and retry the request with updated preconditions.",
          "markdownDescription": "412 Precondition Failed\n\nIndicates that one or more preconditions in the request headers were not met.\n\nThe server cannot meet the conditions specified in the request headers, such as If-Match, If-None-Match, If-Modified-Since, or If-Unmodified-Since.\n\nUsed in conditional requests where the client specifies conditions that must be met, such as version checking, cache validation, or optimistic concurrency control. Common in collaborative editing and caching scenarios.\n\nThe preconditions in the request were not met. The client should check the conditions and retry the request with updated preconditions."
        },
        "413": {
          "$ref": "#/definitions/Response",
          "description": "413 Content Too Large\n\nIndicates that the request payload is too large for the server to process.\n\nThe request body exceeds the server's maximum allowed size limit.\n\nUsed when file uploads exceed size limits, when request bodies are too large for processing, or when the server has configured size restrictions. Common in file upload scenarios and API rate limiting.\n\nThe request payload is too large. The client should reduce the size of the request body or split it into smaller chunks.",
          "markdownDescription": "413 Content Too Large\n\nIndicates that the request payload is too large for the server to process.\n\nThe request body exceeds the server's maximum allowed size limit.\n\nUsed when file uploads exceed size limits, when request bodies are too large for processing, or when the server has configured size restrictions. Common in file upload scenarios and API rate limiting.\n\nThe request payload is too large. The client should reduce the size of the request body or split it into smaller chunks."
        },
        "414": {
          "$ref": "#/definitions/Response",
          "description": "414 URI Too Long\n\nIndicates that the URI provided in the request is too long for the server to process.\n\nThe URL exceeds the server's maximum allowed length limit.\n\nUsed when URLs are too long due to excessive query parameters, when GET requests contain too much data in the URL, or when the server has configured URI length restrictions. Common in search APIs and parameter-heavy requests.\n\nThe URI is too long. The client should shorten the URL or use POST instead of GET for large amounts of data.",
          "markdownDescription": "414 URI Too Long\n\nIndicates that the URI provided in the request is too long for the server to process.\n\nThe URL exceeds the server's maximum allowed length limit.\n\nUsed when URLs are too long due to excessive query parameters, when GET requests contain too much data in the URL, or when the server has configured URI length restrictions. Common in search APIs and parameter-heavy requests.\n\nThe URI is too long. The client should shorten the URL or use POST instead of GET for large amounts of data."
        },
        "415": {
          "$ref": "#/definitions/Response",
          "description": "415 Unsupported Media Type\n\nIndicates that the server cannot process the request because the media type is not supported.\n\nThe server cannot process the request body because the Content-Type is not supported or recognized.\n\nUsed when the client sends data in an unsupported format, when the server only accepts specific content types, or when there's a mismatch between the expected and actual content type. Common in API endpoints with strict content type requirements.\n\nThe content type is not supported. The client should check the API documentation for supported content types and retry with the correct Content-Type header.",
          "markdownDescription": "415 Unsupported Media Type\n\nIndicates that the server cannot process the request because the media type is not supported.\n\nThe server cannot process the request body because the Content-Type is not supported or recognized.\n\nUsed when the client sends data in an unsupported format, when the server only accepts specific content types, or when there's a mismatch between the expected and actual content type. Common in API endpoints with strict content type requirements.\n\nThe content type is not supported. The client should check the API documentation for supported content types and retry with the correct Content-Type header."
        },
        "416": {
          "$ref": "#/definitions/Response",
          "description": "416 Range Not Satisfiable\n\nIndicates that the server cannot satisfy the range request specified in the Range header.\n\nThe requested range is not valid for the resource, either because the range is beyond the resource size or the resource doesn't support range requests.\n\nUsed when range requests are invalid, when the requested range exceeds the resource size, or when the resource doesn't support partial content requests. Common in file download scenarios and media streaming.\n\nThe range request is not satisfiable. The client should check the range specification or request the full resource.",
          "markdownDescription": "416 Range Not Satisfiable\n\nIndicates that the server cannot satisfy the range request specified in the Range header.\n\nThe requested range is not valid for the resource, either because the range is beyond the resource size or the resource doesn't support range requests.\n\nUsed when range requests are invalid, when the requested range exceeds the resource size, or when the resource doesn't support partial content requests. Common in file download scenarios and media streaming.\n\nThe range request is not satisfiable. The client should check the range specification or request the full resource."
        },
        "417": {
          "$ref": "#/definitions/Response",
          "description": "417 Expectation Failed\n\nIndicates that the server cannot meet the requirements of the Expect header.\n\nThe server cannot fulfill the expectations specified in the Expect header, typically when the server cannot handle the 100-continue expectation.\n\nUsed when the server cannot handle the Expect: 100-continue header, when the server doesn't support the expected behavior, or when there's a mismatch between client expectations and server capabilities. Common in HTTP/1.1 implementations.\n\nThe server cannot meet the expectations in the request. The client should retry without the Expect header or adjust the request.",
          "markdownDescription": "417 Expectation Failed\n\nIndicates that the server cannot meet the requirements of the Expect header.\n\nThe server cannot fulfill the expectations specified in the Expect header, typically when the server cannot handle the 100-continue expectation.\n\nUsed when the server cannot handle the Expect: 100-continue header, when the server doesn't support the expected behavior, or when there's a mismatch between client expectations and server capabilities. Common in HTTP/1.1 implementations.\n\nThe server cannot meet the expectations in the request. The client should retry without the Expect header or adjust the request."
        },
        "418": {
          "$ref": "#/definitions/Response",
          "description": "418 (Unused)\n\nThis status code is reserved and not used in current HTTP specifications.\n\nThis status code is reserved and should not be used in new implementations.\n\nNot used in modern web applications. This code is reserved and should not be implemented.\n\nThis status code should not be encountered in modern web applications.",
          "markdownDescription": "418 (Unused)\n\nThis status code is reserved and not used in current HTTP specifications.\n\nThis status code is reserved and should not be used in new implementations.\n\nNot used in modern web applications. This code is reserved and should not be implemented.\n\nThis status code should not be encountered in modern web applications."
        },
        "421": {
          "$ref": "#/definitions/Response",
          "description": "421 Misdirected Request\n\nIndicates that the request was directed to a server that is not able to produce a response.\n\nThe request was sent to a server that cannot handle it, typically due to HTTP/2 connection reuse issues or server configuration problems.\n\nUsed in HTTP/2 environments when a request is sent to the wrong server due to connection reuse, when there are server configuration issues, or when the request cannot be processed by the current server instance. Common in load balancing scenarios.\n\nThe request was sent to the wrong server. The client should retry the request, which may be routed to a different server.",
          "markdownDescription": "421 Misdirected Request\n\nIndicates that the request was directed to a server that is not able to produce a response.\n\nThe request was sent to a server that cannot handle it, typically due to HTTP/2 connection reuse issues or server configuration problems.\n\nUsed in HTTP/2 environments when a request is sent to the wrong server due to connection reuse, when there are server configuration issues, or when the request cannot be processed by the current server instance. Common in load balancing scenarios.\n\nThe request was sent to the wrong server. The client should retry the request, which may be routed to a different server."
        },
        "422": {
          "$ref": "#/definitions/Response",
          "description": "422 Unprocessable Content\n\nIndicates that the request is well-formed but contains semantic errors that prevent processing.\n\nThe request syntax is correct but the server cannot process the request due to semantic errors, such as validation failures or business rule violations.\n\nUsed for validation errors, business rule violations, or when the request is syntactically correct but logically invalid. Common in API validation scenarios where the request format is correct but the data is invalid.\n\nThe request is well-formed but contains semantic errors. The client should fix the data and retry the request.",
          "markdownDescription": "422 Unprocessable Content\n\nIndicates that the request is well-formed but contains semantic errors that prevent processing.\n\nThe request syntax is correct but the server cannot process the request due to semantic errors, such as validation failures or business rule violations.\n\nUsed for validation errors, business rule violations, or when the request is syntactically correct but logically invalid. Common in API validation scenarios where the request format is correct but the data is invalid.\n\nThe request is well-formed but contains semantic errors. The client should fix the data and retry the request."
        },
        "423": {
          "$ref": "#/definitions/Response",
          "description": "423 Locked\n\nIndicates that the requested resource is locked and cannot be modified.\n\nThe resource is locked by another process or user and cannot be accessed or modified at this time.\n\nUsed in WebDAV environments for file locking, collaborative editing scenarios, or when resources are temporarily locked for maintenance. Common in document management systems and collaborative editing platforms.\n\nThe resource is locked and cannot be accessed. The client should wait and retry the request later.",
          "markdownDescription": "423 Locked\n\nIndicates that the requested resource is locked and cannot be modified.\n\nThe resource is locked by another process or user and cannot be accessed or modified at this time.\n\nUsed in WebDAV environments for file locking, collaborative editing scenarios, or when resources are temporarily locked for maintenance. Common in document management systems and collaborative editing platforms.\n\nThe resource is locked and cannot be accessed. The client should wait and retry the request later."
        },
        "424": {
          "$ref": "#/definitions/Response",
          "description": "424 Failed Dependency\n\nIndicates that the request failed because it depended on another request that also failed.\n\nThe request cannot be completed because it depends on another operation that failed, typically in batch or multi-part operations.\n\nUsed in WebDAV environments for batch operations where one operation depends on another, or in complex workflows where operations have dependencies. Common in file management systems and collaborative editing scenarios.\n\nThe request failed due to a dependency failure. The client should check the dependencies and retry the request.",
          "markdownDescription": "424 Failed Dependency\n\nIndicates that the request failed because it depended on another request that also failed.\n\nThe request cannot be completed because it depends on another operation that failed, typically in batch or multi-part operations.\n\nUsed in WebDAV environments for batch operations where one operation depends on another, or in complex workflows where operations have dependencies. Common in file management systems and collaborative editing scenarios.\n\nThe request failed due to a dependency failure. The client should check the dependencies and retry the request."
        },
        "425": {
          "$ref": "#/definitions/Response",
          "description": "425 Too Early\n\nIndicates that the server is unwilling to process the request because it might be replayed.\n\nThe server is concerned that the request might be replayed and is unwilling to process it at this time, typically due to timing or security concerns.\n\nUsed in scenarios where request replay is a security concern, such as in early data scenarios or when the server needs to prevent replay attacks. Common in security-sensitive applications and protocols.\n\nThe server is unwilling to process the request due to replay concerns. The client should retry the request later.",
          "markdownDescription": "425 Too Early\n\nIndicates that the server is unwilling to process the request because it might be replayed.\n\nThe server is concerned that the request might be replayed and is unwilling to process it at this time, typically due to timing or security concerns.\n\nUsed in scenarios where request replay is a security concern, such as in early data scenarios or when the server needs to prevent replay attacks. Common in security-sensitive applications and protocols.\n\nThe server is unwilling to process the request due to replay concerns. The client should retry the request later."
        },
        "426": {
          "$ref": "#/definitions/Response",
          "description": "426 Upgrade Required\n\nIndicates that the server requires the client to upgrade to a different protocol.\n\nThe server requires the client to use a different protocol version or upgrade to a newer version to access the resource.\n\nUsed when the server requires protocol upgrades, when the client is using an outdated protocol version, or when the server only supports newer protocol versions. Common in API versioning and protocol migration scenarios.\n\nThe client must upgrade to a different protocol version. The response should include upgrade information.",
          "markdownDescription": "426 Upgrade Required\n\nIndicates that the server requires the client to upgrade to a different protocol.\n\nThe server requires the client to use a different protocol version or upgrade to a newer version to access the resource.\n\nUsed when the server requires protocol upgrades, when the client is using an outdated protocol version, or when the server only supports newer protocol versions. Common in API versioning and protocol migration scenarios.\n\nThe client must upgrade to a different protocol version. The response should include upgrade information."
        },
        "428": {
          "$ref": "#/definitions/Response",
          "description": "428 Precondition Required\n\nIndicates that the server requires the request to include certain preconditions.\n\nThe server requires the client to include specific preconditions in the request headers before it will process the request.\n\nUsed when the server requires specific preconditions for security or consistency reasons, such as requiring If-Match headers for optimistic concurrency control or other conditional headers. Common in collaborative editing and version control scenarios.\n\nThe server requires specific preconditions. The client should include the required preconditions and retry the request.",
          "markdownDescription": "428 Precondition Required\n\nIndicates that the server requires the request to include certain preconditions.\n\nThe server requires the client to include specific preconditions in the request headers before it will process the request.\n\nUsed when the server requires specific preconditions for security or consistency reasons, such as requiring If-Match headers for optimistic concurrency control or other conditional headers. Common in collaborative editing and version control scenarios.\n\nThe server requires specific preconditions. The client should include the required preconditions and retry the request."
        },
        "429": {
          "$ref": "#/definitions/Response",
          "description": "429 Too Many Requests\n\nIndicates that the client has sent too many requests in a given time period and should slow down.\n\nThe client has exceeded the rate limit and the server is refusing to process additional requests until the rate limit resets.\n\nUsed for rate limiting, API throttling, and preventing abuse. Common in API endpoints that need to control request frequency, prevent spam, or manage resource usage. Often includes retry-after headers.\n\nThe client has exceeded the rate limit and should slow down. The client should wait before retrying the request.",
          "markdownDescription": "429 Too Many Requests\n\nIndicates that the client has sent too many requests in a given time period and should slow down.\n\nThe client has exceeded the rate limit and the server is refusing to process additional requests until the rate limit resets.\n\nUsed for rate limiting, API throttling, and preventing abuse. Common in API endpoints that need to control request frequency, prevent spam, or manage resource usage. Often includes retry-after headers.\n\nThe client has exceeded the rate limit and should slow down. The client should wait before retrying the request."
        },
        "431": {
          "$ref": "#/definitions/Response",
          "description": "431 Request Header Fields Too Large\n\nIndicates that the server is unwilling to process the request because the header fields are too large.\n\nThe request headers exceed the server's maximum allowed size limit.\n\nUsed when request headers are too large, when there are too many headers, or when individual headers exceed size limits. Common in scenarios with large authentication tokens or excessive header data.\n\nThe request headers are too large. The client should reduce the size of the headers and retry the request.",
          "markdownDescription": "431 Request Header Fields Too Large\n\nIndicates that the server is unwilling to process the request because the header fields are too large.\n\nThe request headers exceed the server's maximum allowed size limit.\n\nUsed when request headers are too large, when there are too many headers, or when individual headers exceed size limits. Common in scenarios with large authentication tokens or excessive header data.\n\nThe request headers are too large. The client should reduce the size of the headers and retry the request."
        },
        "451": {
          "$ref": "#/definitions/Response",
          "description": "451 Unavailable For Legal Reasons\n\nIndicates that the requested resource is unavailable due to legal reasons.\n\nThe resource is not available due to legal restrictions, such as censorship, court orders, or regulatory requirements.\n\nUsed when content is blocked due to legal restrictions, when resources are unavailable in certain jurisdictions, or when there are regulatory compliance issues. Common in content delivery networks and international services.\n\nThe resource is unavailable due to legal restrictions. The client should not retry the request as it will not be available.",
          "markdownDescription": "451 Unavailable For Legal Reasons\n\nIndicates that the requested resource is unavailable due to legal reasons.\n\nThe resource is not available due to legal restrictions, such as censorship, court orders, or regulatory requirements.\n\nUsed when content is blocked due to legal restrictions, when resources are unavailable in certain jurisdictions, or when there are regulatory compliance issues. Common in content delivery networks and international services.\n\nThe resource is unavailable due to legal restrictions. The client should not retry the request as it will not be available."
        },
        "500": {
          "$ref": "#/definitions/Response",
          "description": "500 Internal Server Error\n\nIndicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\n\nThe server encountered an internal error or exception that prevented it from processing the request successfully.\n\nUsed for server-side errors, unhandled exceptions, database connection failures, or any unexpected server-side issue. Common in applications when there are bugs, configuration issues, or resource problems.\n\nThe server encountered an internal error. The client should retry the request later, as this is typically a temporary issue.",
          "markdownDescription": "500 Internal Server Error\n\nIndicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\n\nThe server encountered an internal error or exception that prevented it from processing the request successfully.\n\nUsed for server-side errors, unhandled exceptions, database connection failures, or any unexpected server-side issue. Common in applications when there are bugs, configuration issues, or resource problems.\n\nThe server encountered an internal error. The client should retry the request later, as this is typically a temporary issue."
        },
        "501": {
          "$ref": "#/definitions/Response",
          "description": "501 Not Implemented\n\nIndicates that the server does not support the functionality required to fulfill the request.\n\nThe server does not recognize the request method or lacks the ability to fulfill the request.\n\nUsed when the server doesn't support the requested HTTP method, when functionality is not implemented, or when the server cannot handle the request. Common in API development when endpoints are not yet implemented.\n\nThe server does not support the requested functionality. The client should check the API documentation for supported methods and features.",
          "markdownDescription": "501 Not Implemented\n\nIndicates that the server does not support the functionality required to fulfill the request.\n\nThe server does not recognize the request method or lacks the ability to fulfill the request.\n\nUsed when the server doesn't support the requested HTTP method, when functionality is not implemented, or when the server cannot handle the request. Common in API development when endpoints are not yet implemented.\n\nThe server does not support the requested functionality. The client should check the API documentation for supported methods and features."
        },
        "502": {
          "$ref": "#/definitions/Response",
          "description": "502 Bad Gateway\n\nIndicates that the server, while acting as a gateway or proxy, received an invalid response from an upstream server.\n\nThe server acting as a gateway or proxy received an invalid response from the upstream server it was trying to access.\n\nUsed in load balancers, reverse proxies, and API gateways when the upstream server returns an invalid response or is unreachable. Common in microservices architectures and distributed systems.\n\nThe gateway received an invalid response from the upstream server. The client should retry the request later.",
          "markdownDescription": "502 Bad Gateway\n\nIndicates that the server, while acting as a gateway or proxy, received an invalid response from an upstream server.\n\nThe server acting as a gateway or proxy received an invalid response from the upstream server it was trying to access.\n\nUsed in load balancers, reverse proxies, and API gateways when the upstream server returns an invalid response or is unreachable. Common in microservices architectures and distributed systems.\n\nThe gateway received an invalid response from the upstream server. The client should retry the request later."
        },
        "503": {
          "$ref": "#/definitions/Response",
          "description": "503 Service Unavailable\n\nIndicates that the server is temporarily unable to handle the request due to maintenance or overload.\n\nThe server is temporarily unavailable, typically due to maintenance, overload, or temporary resource constraints.\n\nUsed during server maintenance, when the server is overloaded, when there are temporary resource issues, or when the service is temporarily down. Common in high-traffic scenarios and planned maintenance windows.\n\nThe server is temporarily unavailable. The client should retry the request later, often with exponential backoff.",
          "markdownDescription": "503 Service Unavailable\n\nIndicates that the server is temporarily unable to handle the request due to maintenance or overload.\n\nThe server is temporarily unavailable, typically due to maintenance, overload, or temporary resource constraints.\n\nUsed during server maintenance, when the server is overloaded, when there are temporary resource issues, or when the service is temporarily down. Common in high-traffic scenarios and planned maintenance windows.\n\nThe server is temporarily unavailable. The client should retry the request later, often with exponential backoff."
        },
        "504": {
          "$ref": "#/definitions/Response",
          "description": "504 Gateway Timeout\n\nIndicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server.\n\nThe gateway or proxy server timed out while waiting for a response from the upstream server.\n\nUsed in load balancers, reverse proxies, and API gateways when the upstream server takes too long to respond. Common in microservices architectures where services have different response times.\n\nThe gateway timed out waiting for the upstream server. The client should retry the request later.",
          "markdownDescription": "504 Gateway Timeout\n\nIndicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server.\n\nThe gateway or proxy server timed out while waiting for a response from the upstream server.\n\nUsed in load balancers, reverse proxies, and API gateways when the upstream server takes too long to respond. Common in microservices architectures where services have different response times.\n\nThe gateway timed out waiting for the upstream server. The client should retry the request later."
        },
        "505": {
          "$ref": "#/definitions/Response",
          "description": "505 HTTP Version Not Supported\n\nIndicates that the server does not support the HTTP protocol version used in the request.\n\nThe server does not support the HTTP protocol version specified in the request.\n\nUsed when the client uses an unsupported HTTP version, when the server only supports specific HTTP versions, or when there are protocol version mismatches. Common in legacy systems and protocol migration scenarios.\n\nThe server does not support the HTTP version used in the request. The client should use a supported HTTP version.",
          "markdownDescription": "505 HTTP Version Not Supported\n\nIndicates that the server does not support the HTTP protocol version used in the request.\n\nThe server does not support the HTTP protocol version specified in the request.\n\nUsed when the client uses an unsupported HTTP version, when the server only supports specific HTTP versions, or when there are protocol version mismatches. Common in legacy systems and protocol migration scenarios.\n\nThe server does not support the HTTP version used in the request. The client should use a supported HTTP version."
        },
        "506": {
          "$ref": "#/definitions/Response",
          "description": "506 Variant Also Negotiates\n\nIndicates that the server has an internal configuration error in which the chosen variant resource is configured to engage in transparent content negotiation.\n\nThe server has a configuration error where the selected variant resource is configured to engage in transparent content negotiation, creating a negotiation loop.\n\nUsed in content negotiation scenarios where there's a configuration error causing negotiation loops. Common in complex content delivery systems and advanced HTTP implementations.\n\nThe server has a configuration error in content negotiation. The client should contact the server administrator.",
          "markdownDescription": "506 Variant Also Negotiates\n\nIndicates that the server has an internal configuration error in which the chosen variant resource is configured to engage in transparent content negotiation.\n\nThe server has a configuration error where the selected variant resource is configured to engage in transparent content negotiation, creating a negotiation loop.\n\nUsed in content negotiation scenarios where there's a configuration error causing negotiation loops. Common in complex content delivery systems and advanced HTTP implementations.\n\nThe server has a configuration error in content negotiation. The client should contact the server administrator."
        },
        "507": {
          "$ref": "#/definitions/Response",
          "description": "507 Insufficient Storage\n\nIndicates that the server is unable to store the representation needed to complete the request.\n\nThe server cannot store the representation required to complete the request, typically due to storage space limitations.\n\nUsed in WebDAV environments when there's insufficient storage space, when the server cannot allocate storage for the request, or when storage quotas are exceeded. Common in file management systems and collaborative editing platforms.\n\nThe server cannot store the required representation. The client should check storage availability and retry the request.",
          "markdownDescription": "507 Insufficient Storage\n\nIndicates that the server is unable to store the representation needed to complete the request.\n\nThe server cannot store the representation required to complete the request, typically due to storage space limitations.\n\nUsed in WebDAV environments when there's insufficient storage space, when the server cannot allocate storage for the request, or when storage quotas are exceeded. Common in file management systems and collaborative editing platforms.\n\nThe server cannot store the required representation. The client should check storage availability and retry the request."
        },
        "508": {
          "$ref": "#/definitions/Response",
          "description": "508 Loop Detected\n\nIndicates that the server detected an infinite loop while processing the request.\n\nThe server detected an infinite loop in the request processing, typically in WebDAV operations.\n\nUsed in WebDAV environments when there are infinite loops in request processing, when there are circular references in operations, or when the server detects recursive operations. Common in file management systems and collaborative editing scenarios.\n\nThe server detected an infinite loop. The client should check the request for circular references and retry.",
          "markdownDescription": "508 Loop Detected\n\nIndicates that the server detected an infinite loop while processing the request.\n\nThe server detected an infinite loop in the request processing, typically in WebDAV operations.\n\nUsed in WebDAV environments when there are infinite loops in request processing, when there are circular references in operations, or when the server detects recursive operations. Common in file management systems and collaborative editing scenarios.\n\nThe server detected an infinite loop. The client should check the request for circular references and retry."
        },
        "510": {
          "$ref": "#/definitions/Response",
          "description": "510 Not Extended — OBSOLETED\n\nThis status code is obsolete and should not be used in modern implementations.\n\nThis status code was used for HTTP extensions but is now obsolete and should not be used.\n\nNot used in modern web applications. This code is obsolete and should not be implemented.\n\nThis status code should not be encountered in modern web applications.",
          "markdownDescription": "510 Not Extended — OBSOLETED\n\nThis status code is obsolete and should not be used in modern implementations.\n\nThis status code was used for HTTP extensions but is now obsolete and should not be used.\n\nNot used in modern web applications. This code is obsolete and should not be implemented.\n\nThis status code should not be encountered in modern web applications."
        },
        "511": {
          "$ref": "#/definitions/Response",
          "description": "511 Network Authentication Required\n\nIndicates that the client needs to authenticate to gain network access.\n\nThe client must authenticate with the network before it can access the requested resource.\n\nUsed in captive portal scenarios, public Wi-Fi networks, or when network-level authentication is required. Common in public networks, hotels, airports, and other locations where network access requires authentication.\n\nThe client needs to authenticate with the network. The client should follow the authentication process provided by the network.",
          "markdownDescription": "511 Network Authentication Required\n\nIndicates that the client needs to authenticate to gain network access.\n\nThe client must authenticate with the network before it can access the requested resource.\n\nUsed in captive portal scenarios, public Wi-Fi networks, or when network-level authentication is required. Common in public networks, hotels, airports, and other locations where network access requires authentication.\n\nThe client needs to authenticate with the network. The client should follow the authentication process provided by the network."
        },
        "1xx": {
          "$ref": "#/definitions/Response",
          "description": "1xx — Informational\n\nIndicates that the request was received and the server is continuing to process it.\n\nUsed for provisional responses that indicate the server has received the request and is continuing to process it. These responses are typically used for status updates during long-running operations or to indicate that the server is ready to receive additional data.\n\nThe client should continue waiting for the final response. These are provisional responses and the client should not consider the request complete until receiving a final status code.",
          "markdownDescription": "1xx — Informational\n\nIndicates that the request was received and the server is continuing to process it.\n\nUsed for provisional responses that indicate the server has received the request and is continuing to process it. These responses are typically used for status updates during long-running operations or to indicate that the server is ready to receive additional data.\n\nThe client should continue waiting for the final response. These are provisional responses and the client should not consider the request complete until receiving a final status code."
        },
        "2xx": {
          "$ref": "#/definitions/Response",
          "description": "2xx — Success\n\nIndicates that the request was successfully received, understood, and accepted.\n\nUsed for successful operations where the request was processed successfully and the response contains the requested data or indicates successful completion of the operation.\n\nThe operation completed successfully. The response body typically contains the requested data or confirmation of the successful operation.",
          "markdownDescription": "2xx — Success\n\nIndicates that the request was successfully received, understood, and accepted.\n\nUsed for successful operations where the request was processed successfully and the response contains the requested data or indicates successful completion of the operation.\n\nThe operation completed successfully. The response body typically contains the requested data or confirmation of the successful operation."
        },
        "3xx": {
          "$ref": "#/definitions/Response",
          "description": "3xx — Redirection\n\nIndicates that further action needs to be taken by the client to complete the request.\n\nUsed when the client needs to take additional action to complete the request, such as following a redirect, providing authentication, or accessing the resource at a different location.\n\nThe client needs to take additional action to complete the request. This may involve following a redirect, providing authentication, or accessing the resource at a different location.",
          "markdownDescription": "3xx — Redirection\n\nIndicates that further action needs to be taken by the client to complete the request.\n\nUsed when the client needs to take additional action to complete the request, such as following a redirect, providing authentication, or accessing the resource at a different location.\n\nThe client needs to take additional action to complete the request. This may involve following a redirect, providing authentication, or accessing the resource at a different location."
        },
        "4xx": {
          "$ref": "#/definitions/Response",
          "description": "4xx — Client Error\n\nIndicates that the request contains bad syntax or cannot be fulfilled by the server.\n\nUsed when the client has sent an invalid request, such as malformed syntax, invalid parameters, authentication failures, or requests for non-existent resources.\n\nThe client has sent an invalid request and should fix the request before retrying. The response body should contain details about what was wrong with the request.",
          "markdownDescription": "4xx — Client Error\n\nIndicates that the request contains bad syntax or cannot be fulfilled by the server.\n\nUsed when the client has sent an invalid request, such as malformed syntax, invalid parameters, authentication failures, or requests for non-existent resources.\n\nThe client has sent an invalid request and should fix the request before retrying. The response body should contain details about what was wrong with the request."
        },
        "5xx": {
          "$ref": "#/definitions/Response",
          "description": "5xx — Server Error\n\nIndicates that the server failed to fulfill a valid request.\n\nUsed when the server encounters an error while processing a valid request, such as internal server errors, service unavailability, or gateway timeouts.\n\nThe server encountered an error while processing the request. The client should retry the request later, as this is typically a temporary issue.",
          "markdownDescription": "5xx — Server Error\n\nIndicates that the server failed to fulfill a valid request.\n\nUsed when the server encounters an error while processing a valid request, such as internal server errors, service unavailability, or gateway timeouts.\n\nThe server encountered an error while processing the request. The client should retry the request later, as this is typically a temporary issue."
        },
        "default": {
          "$ref": "#/definitions/Response",
          "description": "default — The default response for all codes not covered individually.",
          "markdownDescription": "default — The default response for all codes not covered individually."
        }
      },
      "additionalProperties": false,
      "description": "Swagger 2.0 Valid HTTP Status Codes\n\nEnumerates individual HTTP status codes (as keys) plus the special `\"default\"` key, per the IANA HTTP Status Code Registry. JSDoc reason phrases and references mirror the registry entries. See also RFC 9110 (HTTP Semantics) section mappings.",
      "markdownDescription": "Swagger 2.0 Valid HTTP Status Codes\n\nEnumerates individual HTTP status codes (as keys) plus the special `\"default\"` key,\nper the IANA HTTP Status Code Registry. JSDoc reason phrases and references mirror\nthe registry entries. See also RFC 9110 (HTTP Semantics) section mappings."
    },
    "Response": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A short description of the response. CommonMark syntax MAY be used for rich text representation. This field is required.",
          "markdownDescription": "A short description of the response. CommonMark syntax MAY be used for rich text representation.\nThis field is required.",
          "examples": [
            "A list of users",
            "User created successfully",
            "Bad request - validation failed"
          ]
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/Header"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "Maps a header name to its definition. RFC7230 states header names are case insensitive. If a response header is defined with the name \"Content-Type\", it SHALL be ignored.",
          "markdownDescription": "Maps a header name to its definition. RFC7230 states header names are case insensitive.\nIf a response header is defined with the name \"Content-Type\", it SHALL be ignored.",
          "examples": [
            {
              "X-RateLimit-Limit": {
                "description": "Rate limit per hour",
                "schema": {
                  "type": "integer"
                }
              }
            }
          ]
        },
        "content": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MediaType"
          },
          "description": "A map containing descriptions of potential response payloads. The key is a media type or media type range and the value describes it. For responses that match multiple keys, only the most specific key is applicable. e.g. text/plain overrides text/*",
          "markdownDescription": "A map containing descriptions of potential response payloads. The key is a media type\nor media type range and the value describes it. For responses that match multiple keys,\nonly the most specific key is applicable. e.g. text/plain overrides text/*",
          "examples": [
            {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          ]
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/Link"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "A map of operations links that can be followed from the response. The key of the map is a short name for the link, following the naming constraints of the names for Component Objects.",
          "markdownDescription": "A map of operations links that can be followed from the response. The key of the map\nis a short name for the link, following the naming constraints of the names for\nComponent Objects.",
          "examples": [
            {
              "GetUser": {
                "operationId": "getUserById",
                "parameters": {
                  "userId": "$response.body#/id"
                }
              }
            }
          ]
        }
      },
      "required": ["description"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Response Object\n-----\n\nDescribes a single response from an API Operation, including design-time, static links to operations based on the response.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#response-object OpenAPI 3.1.1 Response Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#response-object OpenAPI 3.1.0 Response Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nResponse Object\n-----\n\nDescribes a single response from an API Operation, including design-time, static links\nto operations based on the response.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#response-object OpenAPI 3.1.1 Response Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#response-object OpenAPI 3.1.0 Response Object }  |\n\n-----\nFields\n-----"
    },
    "Link": {
      "type": "object",
      "properties": {
        "operationRef": {
          "type": "string",
          "description": "A relative or absolute reference to an OAS operation. This field is mutually exclusive of the operationId field, and MUST point to an Operation Object. Relative operationRef values MAY be used to locate an existing Operation Object in the OpenAPI definition.",
          "markdownDescription": "A relative or absolute reference to an OAS operation. This field is mutually exclusive\nof the operationId field, and MUST point to an Operation Object. Relative operationRef\nvalues MAY be used to locate an existing Operation Object in the OpenAPI definition.",
          "examples": [
            "#/paths/~1users~1{userId}/get",
            "https://example.com/openapi.json#/paths/~1users~1{userId}/get"
          ]
        },
        "operationId": {
          "type": "string",
          "description": "The name of an existing, resolvable OAS operation, as defined with a unique operationId. This field is mutually exclusive of the operationRef field.",
          "markdownDescription": "The name of an existing, resolvable OAS operation, as defined with a unique operationId.\nThis field is mutually exclusive of the operationRef field.",
          "examples": ["getUserById", "createUser"]
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {},
          "description": "A map representing parameters to pass to an operation as specified with operationId or identified via operationRef. The key is the parameter name to be used, whereas the value can be a constant or an expression to be evaluated and passed to the linked operation. The parameter name can be qualified using the parameter location [{in}.]{name} for operations that use the same parameter name in different locations (e.g. path.id).",
          "markdownDescription": "A map representing parameters to pass to an operation as specified with operationId\nor identified via operationRef. The key is the parameter name to be used, whereas\nthe value can be a constant or an expression to be evaluated and passed to the linked\noperation. The parameter name can be qualified using the parameter location [{in}.]{name}\nfor operations that use the same parameter name in different locations (e.g. path.id).",
          "examples": [
            {
              "userId": "$response.body#/id"
            },
            {
              "path.id": "$response.body#/id",
              "query.limit": 10
            }
          ]
        },
        "requestBody": {
          "description": "A literal value or expression to use as a request body when calling the target operation.",
          "markdownDescription": "A literal value or expression to use as a request body when calling the target operation.",
          "examples": [
            {
              "name": "John Doe",
              "email": "john@example.com"
            },
            "$request.body"
          ]
        },
        "description": {
          "type": "string",
          "description": "A description of the link. CommonMark syntax MAY be used for rich text representation.",
          "markdownDescription": "A description of the link. CommonMark syntax MAY be used for rich text representation.",
          "examples": ["Get the user by ID", "Create a new user with the provided data"]
        },
        "server": {
          "$ref": "#/definitions/Server",
          "description": "A server object to be used by the target operation.",
          "markdownDescription": "A server object to be used by the target operation.",
          "examples": [
            {
              "url": "https://api.example.com/v1"
            }
          ]
        }
      },
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Link Object\n-----\n\nThe Link object represents a possible design-time link for a response. The presence of a link does not guarantee the caller's ability to successfully invoke it, rather it provides a known relationship and traversal mechanism between responses and other operations.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#link-object OpenAPI 3.1.1 Link Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#link-object OpenAPI 3.1.0 Link Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nLink Object\n-----\n\nThe Link object represents a possible design-time link for a response. The presence of a link\ndoes not guarantee the caller's ability to successfully invoke it, rather it provides a known\nrelationship and traversal mechanism between responses and other operations.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#link-object OpenAPI 3.1.1 Link Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#link-object OpenAPI 3.1.0 Link Object }  |\n\n-----\nFields\n-----"
    },
    "Callback": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/PathItem"
          },
          {
            "$ref": "#/definitions/Reference"
          }
        ],
        "description": "A runtime expression that identifies a URL to use for the callback operation. The expression is evaluated at runtime and MUST resolve to a URL. The value is a Path Item Object that describes the callback operations.",
        "markdownDescription": "A runtime expression that identifies a URL to use for the callback operation.\nThe expression is evaluated at runtime and MUST resolve to a URL. The value\nis a Path Item Object that describes the callback operations.",
        "examples": [
          "{$request.body#/callbackUrl}",
          "{$request.body#/webhookUrl}",
          "{$request.body#/notificationUrl}"
        ]
      },
      "description": "----- Callback Object\n-----\n\nA map of possible out-of band callbacks related to the parent operation. Each value in the map is a Path Item Object that describes a set of requests that may be initiated by the API provider and the expected responses. The key value used to identify the callback object is an expression, evaluated at runtime, that identifies a URL to use for the callback operation.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#callback-object OpenAPI 3.1.1 Callback Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#callback-object OpenAPI 3.1.0 Callback Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nCallback Object\n-----\n\nA map of possible out-of band callbacks related to the parent operation. Each value in the map\nis a Path Item Object that describes a set of requests that may be initiated by the API provider\nand the expected responses. The key value used to identify the callback object is an expression,\nevaluated at runtime, that identifies a URL to use for the callback operation.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#callback-object OpenAPI 3.1.1 Callback Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#callback-object OpenAPI 3.1.0 Callback Object }  |\n\n-----\nFields\n-----"
    },
    "SecurityRequirement": {
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Each name MUST correspond to a security scheme which is declared in the Security Schemes under the Components Object. The value is an array of scope names required for the execution. For OAuth2, the scopes are the scopes required for the execution. For other security schemes, the array MUST be empty.",
        "markdownDescription": "Each name MUST correspond to a security scheme which is declared in the\nSecurity Schemes under the Components Object. The value is an array of\nscope names required for the execution. For OAuth2, the scopes are the\nscopes required for the execution. For other security schemes, the array\nMUST be empty.",
        "examples": [[], ["write:pets", "read:pets"]]
      },
      "description": "----- Security Requirement Object\n-----\n\nLists the required security schemes for execution of the operation. The name used for each property MUST correspond to a security scheme declared in the Security Schemes under the Components Object.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#security-requirement-object OpenAPI 3.1.1 Security Requirement Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#security-requirement-object OpenAPI 3.1.0 Security Requirement Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nSecurity Requirement Object\n-----\n\nLists the required security schemes for execution of the operation. The name\nused for each property MUST correspond to a security scheme declared in the\nSecurity Schemes under the Components Object.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#security-requirement-object OpenAPI 3.1.1 Security Requirement Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#security-requirement-object OpenAPI 3.1.0 Security Requirement Object }  |\n\n-----\nFields\n-----"
    },
    "Webhooks": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/PathItem"
          },
          {
            "$ref": "#/definitions/Reference"
          },
          {
            "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
            "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
            "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
          }
        ]
      },
      "properties": {},
      "description": "----- Webhooks Object\n-----\n\nThe incoming webhooks that MAY be received as part of this API and that the API consumer MAY choose to implement. Closely related to the `callbacks` feature, this section describes requests initiated other than by an API call, for example by an out of band registration.\n\nThe key name is a unique string to refer to each webhook, while the (optionally referenced) Path Item Object describes a request that may be initiated by the API provider and the expected responses.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#webhooks-object OpenAPI 3.1.1 Webhooks Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#webhooks-object OpenAPI 3.1.0 Webhooks Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nWebhooks Object\n-----\n\nThe incoming webhooks that MAY be received as part of this API and that the\nAPI consumer MAY choose to implement. Closely related to the `callbacks` feature,\nthis section describes requests initiated other than by an API call, for example\nby an out of band registration.\n\nThe key name is a unique string to refer to each webhook, while the (optionally\nreferenced) Path Item Object describes a request that may be initiated by the\nAPI provider and the expected responses.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#webhooks-object OpenAPI 3.1.1 Webhooks Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#webhooks-object OpenAPI 3.1.0 Webhooks Object }  |\n\n-----\nFields\n-----"
    },
    "Components": {
      "type": "object",
      "properties": {
        "schemas": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/Schema"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "An object to hold reusable Schema Objects.",
          "markdownDescription": "An object to hold reusable Schema Objects.",
          "examples": [
            {
              "User": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        },
        "responses": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/Response"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "An object to hold reusable Response Objects.",
          "markdownDescription": "An object to hold reusable Response Objects.",
          "examples": [
            {
              "NotFound": {
                "description": "Resource not found"
              }
            }
          ]
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/Parameter"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "An object to hold reusable Parameter Objects.",
          "markdownDescription": "An object to hold reusable Parameter Objects.",
          "examples": [
            {
              "UserId": {
                "name": "userId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          ]
        },
        "examples": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/Example"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "An object to hold reusable Example Objects.",
          "markdownDescription": "An object to hold reusable Example Objects.",
          "examples": [
            {
              "UserExample": {
                "value": {
                  "id": 1,
                  "name": "John Doe"
                }
              }
            }
          ]
        },
        "requestBodies": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/RequestBody"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "An object to hold reusable Request Body Objects.",
          "markdownDescription": "An object to hold reusable Request Body Objects.",
          "examples": [
            {
              "UserRequestBody": {
                "description": "User data",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          ]
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/Header"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "An object to hold reusable Header Objects.",
          "markdownDescription": "An object to hold reusable Header Objects.",
          "examples": [
            {
              "RateLimit": {
                "description": "Rate limit per hour",
                "schema": {
                  "type": "integer"
                }
              }
            }
          ]
        },
        "securitySchemes": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/SecurityScheme"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "An object to hold reusable Security Scheme Objects.",
          "markdownDescription": "An object to hold reusable Security Scheme Objects.",
          "examples": [
            {
              "ApiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-KEY"
              }
            }
          ]
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/Link"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "An object to hold reusable Link Objects.",
          "markdownDescription": "An object to hold reusable Link Objects.",
          "examples": [
            {
              "UserOrders": {
                "operationId": "getOrdersByUserId",
                "parameters": {
                  "userId": "$response.body#/id"
                }
              }
            }
          ]
        },
        "callbacks": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/Callback"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "An object to hold reusable Callback Objects.",
          "markdownDescription": "An object to hold reusable Callback Objects.",
          "examples": [
            {
              "UserCreatedCallback": {
                "{$request.body#/callbackUrl}": {
                  "post": {
                    "requestBody": {
                      "description": "User created event"
                    }
                  }
                }
              }
            }
          ]
        },
        "pathItems": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/PathItem"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "description": "An object to hold reusable Path Item Objects.",
          "markdownDescription": "An object to hold reusable Path Item Objects.",
          "examples": [
            {
              "UserPath": {
                "get": {
                  "summary": "Get user by ID"
                }
              }
            }
          ]
        }
      },
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Components Object\n-----\n\nHolds a set of reusable objects for different aspects of the OAS. All objects defined within the components object will have no effect on the API unless they are explicitly referenced from properties outside the components object.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#components-object OpenAPI 3.1.1 Components Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#components-object OpenAPI 3.1.0 Components Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nComponents Object\n-----\n\nHolds a set of reusable objects for different aspects of the OAS. All objects defined\nwithin the components object will have no effect on the API unless they are explicitly\nreferenced from properties outside the components object.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#components-object OpenAPI 3.1.1 Components Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#components-object OpenAPI 3.1.0 Components Object }  |\n\n-----\nFields\n-----"
    },
    "SecurityScheme": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["apiKey", "http", "mutualTLS", "oauth2", "openIdConnect"],
          "description": "The type of the security scheme. This field is required.",
          "markdownDescription": "The type of the security scheme. This field is required.",
          "examples": ["apiKey", "http", "mutualTLS", "oauth2", "openIdConnect"]
        },
        "description": {
          "type": "string",
          "description": "A short description for security scheme. CommonMark syntax MAY be used for rich text representation.",
          "markdownDescription": "A short description for security scheme. CommonMark syntax MAY be used\nfor rich text representation.",
          "examples": [
            "API key authentication",
            "OAuth2 authentication with authorization code flow"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the header, query or cookie parameter to be used. This field is required for `apiKey` type.",
          "markdownDescription": "The name of the header, query or cookie parameter to be used. This field\nis required for `apiKey` type.",
          "examples": ["X-API-Key", "api_key", "sessionId"]
        },
        "in": {
          "type": "string",
          "enum": ["query", "header", "cookie"],
          "description": "The location of the API key. This field is required for `apiKey` type.",
          "markdownDescription": "The location of the API key. This field is required for `apiKey` type.",
          "examples": ["header", "query", "cookie"]
        },
        "scheme": {
          "type": "string",
          "description": "The name of the HTTP Authorization scheme to be used in the Authorization header. This field is required for `http` type.",
          "markdownDescription": "The name of the HTTP Authorization scheme to be used in the Authorization\nheader. This field is required for `http` type.",
          "examples": ["basic", "bearer", "digest"]
        },
        "bearerFormat": {
          "type": "string",
          "description": "A hint to the client to identify how the bearer token is formatted. Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes.",
          "markdownDescription": "A hint to the client to identify how the bearer token is formatted. Bearer\ntokens are usually generated by an authorization server, so this information\nis primarily for documentation purposes.",
          "examples": ["JWT", "Bearer"]
        },
        "flows": {
          "$ref": "#/definitions/OAuthFlows",
          "description": "An object containing configuration information for the flow types supported. This field is required for `oauth2` type.",
          "markdownDescription": "An object containing configuration information for the flow types supported.\nThis field is required for `oauth2` type.",
          "examples": [
            {
              "authorizationCode": {
                "authorizationUrl": "https://example.com/oauth/authorize",
                "tokenUrl": "https://example.com/oauth/token"
              }
            }
          ]
        },
        "openIdConnectUrl": {
          "type": "string",
          "description": "OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of a URL. This field is required for `openIdConnect` type.",
          "markdownDescription": "OpenId Connect URL to discover OAuth2 configuration values. This MUST be\nin the form of a URL. This field is required for `openIdConnect` type.",
          "examples": ["https://example.com/.well-known/openid_configuration"]
        }
      },
      "required": ["type"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Security Scheme Object\n-----\n\nDefines a security scheme that can be used by the operations. Supported schemes are HTTP authentication, an API key (either as a header, a cookie parameter or as a query parameter), mutual TLS (use of a client certificate), OAuth2's common flows (implicit, password, client credentials and authorization code) as defined in RFC6749, and OpenID Connect Discovery.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#security-scheme-object OpenAPI 3.1.1 Security Scheme Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#security-scheme-object OpenAPI 3.1.0 Security Scheme Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nSecurity Scheme Object\n-----\n\nDefines a security scheme that can be used by the operations. Supported schemes\nare HTTP authentication, an API key (either as a header, a cookie parameter or\nas a query parameter), mutual TLS (use of a client certificate), OAuth2's common\nflows (implicit, password, client credentials and authorization code) as defined\nin RFC6749, and OpenID Connect Discovery.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#security-scheme-object OpenAPI 3.1.1 Security Scheme Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#security-scheme-object OpenAPI 3.1.0 Security Scheme Object }  |\n\n-----\nFields\n-----"
    },
    "OAuthFlows": {
      "type": "object",
      "properties": {
        "implicit": {
          "$ref": "#/definitions/OAuthFlow",
          "description": "Configuration for the OAuth Implicit flow.",
          "markdownDescription": "Configuration for the OAuth Implicit flow.",
          "examples": [
            {
              "authorizationUrl": "https://example.com/oauth/authorize",
              "scopes": {
                "read:pets": "read your pets"
              }
            }
          ]
        },
        "password": {
          "$ref": "#/definitions/OAuthFlow",
          "description": "Configuration for the OAuth Resource Owner Password flow.",
          "markdownDescription": "Configuration for the OAuth Resource Owner Password flow.",
          "examples": [
            {
              "tokenUrl": "https://example.com/oauth/token",
              "scopes": {
                "read:pets": "read your pets"
              }
            }
          ]
        },
        "clientCredentials": {
          "$ref": "#/definitions/OAuthFlow",
          "description": "Configuration for the OAuth Client Credentials flow.",
          "markdownDescription": "Configuration for the OAuth Client Credentials flow.",
          "examples": [
            {
              "tokenUrl": "https://example.com/oauth/token",
              "scopes": {
                "read:pets": "read your pets"
              }
            }
          ]
        },
        "authorizationCode": {
          "$ref": "#/definitions/OAuthFlow",
          "description": "Configuration for the OAuth Authorization Code flow.",
          "markdownDescription": "Configuration for the OAuth Authorization Code flow.",
          "examples": [
            {
              "authorizationUrl": "https://example.com/oauth/authorize",
              "tokenUrl": "https://example.com/oauth/token",
              "scopes": {
                "read:pets": "read your pets"
              }
            }
          ]
        }
      },
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- OAuth Flows Object\n-----\n\nAllows configuration of the supported OAuth Flows.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#oauth-flows-object OpenAPI 3.1.1 OAuth Flows Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#oauth-flows-object OpenAPI 3.1.0 OAuth Flows Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nOAuth Flows Object\n-----\n\nAllows configuration of the supported OAuth Flows.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#oauth-flows-object OpenAPI 3.1.1 OAuth Flows Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#oauth-flows-object OpenAPI 3.1.0 OAuth Flows Object }  |\n\n-----\nFields\n-----"
    },
    "OAuthFlow": {
      "type": "object",
      "properties": {
        "authorizationUrl": {
          "type": "string",
          "description": "The authorization URL to be used for this flow. This MUST be in the form of a URL. This field is required for `implicit` and `authorizationCode` flows.",
          "markdownDescription": "The authorization URL to be used for this flow. This MUST be in the form of a URL.\nThis field is required for `implicit` and `authorizationCode` flows.",
          "examples": ["https://example.com/oauth/authorize"]
        },
        "tokenUrl": {
          "type": "string",
          "description": "The token URL to be used for this flow. This MUST be in the form of a URL. This field is required for `password`, `clientCredentials`, and `authorizationCode` flows.",
          "markdownDescription": "The token URL to be used for this flow. This MUST be in the form of a URL.\nThis field is required for `password`, `clientCredentials`, and `authorizationCode` flows.",
          "examples": ["https://example.com/oauth/token"]
        },
        "refreshUrl": {
          "type": "string",
          "description": "The URL to be used for obtaining refresh tokens. This MUST be in the form of a URL.",
          "markdownDescription": "The URL to be used for obtaining refresh tokens. This MUST be in the form of a URL.",
          "examples": ["https://example.com/oauth/refresh"]
        },
        "scopes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The available scopes for the OAuth2 security scheme. A map between the scope name and a short description for it. This field is required.",
          "markdownDescription": "The available scopes for the OAuth2 security scheme. A map between the scope\nname and a short description for it. This field is required.",
          "examples": [
            {
              "read:pets": "read your pets",
              "write:pets": "modify pets in your account"
            }
          ]
        }
      },
      "required": ["scopes"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- OAuth Flow Object\n-----\n\nConfiguration details for a supported OAuth Flow.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#oauth-flow-object OpenAPI 3.1.1 OAuth Flow Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#oauth-flow-object OpenAPI 3.1.0 OAuth Flow Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nOAuth Flow Object\n-----\n\nConfiguration details for a supported OAuth Flow.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#oauth-flow-object OpenAPI 3.1.1 OAuth Flow Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#oauth-flow-object OpenAPI 3.1.0 OAuth Flow Object }  |\n\n-----\nFields\n-----"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the tag. This field is required.",
          "markdownDescription": "The name of the tag. This field is required.",
          "examples": ["users", "pets", "authentication"]
        },
        "description": {
          "type": "string",
          "description": "A short description for the tag. CommonMark syntax MAY be used for rich text representation.",
          "markdownDescription": "A short description for the tag. CommonMark syntax MAY be used for rich text representation.",
          "examples": ["User management operations", "Pet store operations"]
        },
        "externalDocs": {
          "$ref": "#/definitions/ExternalDocumentation",
          "description": "Additional external documentation for this tag.",
          "markdownDescription": "Additional external documentation for this tag.",
          "examples": [
            {
              "description": "Find out more about user management",
              "url": "https://example.com/docs/users"
            }
          ]
        }
      },
      "required": ["name"],
      "additionalProperties": {
        "description": "Specification Extensions allow adding custom properties to OpenAPI objects. All extension properties must start with `x-` and can contain any valid JSON value.",
        "markdownDescription": "Specification Extensions allow adding custom properties to OpenAPI objects.\nAll extension properties must start with `x-` and can contain any valid JSON value.",
        "examples": ["x-custom-property", "x-internal-id", "x-codegen-settings"]
      },
      "description": "----- Tag Object\n-----\n\nAdds metadata to a single tag that is used by the Tag Object. It is not mandatory to have a Tag Object per tag used there.\n\nTags provide a way to organize and categorize API operations, making it easier for developers to understand and navigate the API. They are commonly used to group operations by resource type, functionality, or any other logical division.\n\n| Version | Reference | |---|-----| | 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#tag-object OpenAPI 3.1.1 Tag Object }  | | 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#tag-object OpenAPI 3.1.0 Tag Object }  |\n\n----- Fields\n-----",
      "markdownDescription": "-----\nTag Object\n-----\n\nAdds metadata to a single tag that is used by the Tag Object.\nIt is not mandatory to have a Tag Object per tag used there.\n\nTags provide a way to organize and categorize API operations, making it easier\nfor developers to understand and navigate the API. They are commonly used to\ngroup operations by resource type, functionality, or any other logical division.\n\n| Version | Reference |\n|---|-----|\n| 3.1.1   |  {@link  https://spec.openapis.org/oas/v3.1.1#tag-object OpenAPI 3.1.1 Tag Object }  |\n| 3.1.0   |  {@link  https://spec.openapis.org/oas/v3.1.0#tag-object OpenAPI 3.1.0 Tag Object }  |\n\n-----\nFields\n-----"
    }
  }
}
